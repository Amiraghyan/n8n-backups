{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Simulate Multi-Item for Parallel Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Initialize finishedSet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start Sub-Workflow via Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Callback Wait": {
      "main": [
        [
          {
            "node": "Update finishedSet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update finishedSet": {
      "main": [
        [
          {
            "node": "Acknowledge Finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initialize finishedSet": {
      "main": [
        [
          {
            "node": "If All Finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulate Multi-Item for Parallel Processing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If All Finished": {
      "main": [
        [
          {
            "node": "Continue Workflow (noop)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Webhook Callback Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Sub-Workflow via Webhook": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Acknowledge Finished": {
      "main": [
        [
          {
            "node": "If All Finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Call Resume on Parent Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-20T23:45:53.206Z",
  "id": "U6L7x5VWT07CfTIB",
  "isArchived": false,
  "meta": null,
  "name": "Pattern for Parallel Sub-Workflow Execution Followed by Wait-For-All Loop",
  "nodes": [
    {
      "parameters": {},
      "id": "0b5211cb-5e36-47ae-a7aa-5122bce1bbe7",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        448,
        144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f4f22ede-b16f-4a27-ac4c-520210dc9097",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        880,
        144
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "resume": "webhook",
        "httpMethod": "POST",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1d755814-ccc3-4990-b3c0-5b57aaa2306f",
      "name": "Webhook Callback Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        1584,
        192
      ],
      "webhookId": "5cd058b4-48c8-449a-9c09-959a5b8a2b48",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsCode": "let json = $('If All Finished').first().json;\nif (!json.finishedSet) json.finishedSet = [];\nlet finishedItemId = $('Webhook Callback Wait').item.json.body.finishedItemId;\nif (!json.finishedSet[finishedItemId]) json.finishedSet.push(finishedItemId);\nreturn [json];"
      },
      "id": "b13f455b-3534-4531-b46c-1fee46a74d45",
      "name": "Update finishedSet",
      "type": "n8n-nodes-base.code",
      "position": [
        1808,
        192
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "193ab8f1-0e23-491c-914e-b8b26b0160f7",
              "name": "finishedSet",
              "type": "array",
              "value": "[]"
            }
          ]
        },
        "options": {}
      },
      "id": "3292f777-fdec-49a1-96e0-aaab5ac239bf",
      "name": "Initialize finishedSet",
      "type": "n8n-nodes-base.set",
      "position": [
        1104,
        32
      ],
      "executeOnce": true,
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "return [\n  {requestId: 'req4567'},\n  {requestId: 'req8765'},\n  {requestId: 'req1234'}\n];"
      },
      "id": "cdb9ca85-d915-4b4c-b1e9-e1644b319d48",
      "name": "Simulate Multi-Item for Parallel Processing",
      "type": "n8n-nodes-base.code",
      "position": [
        640,
        144
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "385c3149-3623-4dd2-9022-770c32f82421",
              "operator": {
                "type": "number",
                "operation": "gte"
              },
              "leftValue": "={{ $json.finishedSet.length }}",
              "rightValue": "={{ $('Simulate Multi-Item for Parallel Processing').all().length }}"
            }
          ]
        },
        "options": {}
      },
      "id": "695f0473-2ece-449b-b8e7-6a79e07a5693",
      "name": "If All Finished",
      "type": "n8n-nodes-base.if",
      "position": [
        1328,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.WEBHOOK_URL }}/webhook/parallel-subworkflow-target",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "callbackurl",
              "value": "={{ $execution.resumeUrl }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestItemId",
              "value": "={{ $json.requestId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "78e4b078-59a8-4e60-8035-4a236afbc426",
      "name": "Start Sub-Workflow via Webhook",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1040,
        384
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "94c6a636-5ad6-4eff-b637-ce95c7aadc4e",
      "name": "Acknowledge Finished",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1648,
        416
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "### Start Multiple Sub-Workflows Asynchronously\n* Note: Callback/Webhook \"internal\" Base-URL should be configured in the n8n instance to reference the k8s service name and internal port.",
        "height": 109,
        "width": 390,
        "color": 3
      },
      "id": "5dc8fe4f-c7ad-411b-a5d3-d91d9f3c9f96",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        576,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Pseudo-Synchronously Wait for All Sub-Workflows to finish",
        "height": 80,
        "width": 283,
        "color": 3
      },
      "id": "a3dcac40-0389-4009-9d88-99b9d9d0b075",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1600,
        112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "27e32162-bb9c-4e03-8f13-867850baa151",
      "name": "Continue Workflow (noop)",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1648,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main/Parent Workflow\n* This starts multiple executions of the sub-workflow in parallel and then loops until they all report back.",
        "height": 684.1818181818179,
        "width": 1577.931818181817
      },
      "id": "8614c27d-ce72-4a75-9db7-4fb23b255a5e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -96
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Sub-Workflow\n**Cut/Paste this into a separate workflow, and activate it!!!**",
        "height": 189.2194473140495,
        "width": 1477.331211260329
      },
      "id": "2879a83e-251d-40cd-b5fd-8866718ccc28",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        416,
        624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c29fcf8a-3910-4279-8ddf-5525006512af",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        1296,
        672
      ],
      "webhookId": "2d62e5c2-ad4a-4e90-a075-7ca5212e015a",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.headers.callbackurl }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "finishedItemId",
              "value": "={{ $('Webhook').item.json.body.requestItemId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "10678b0e-1c80-4e0f-8c1f-159ae381d70f",
      "name": "Call Resume on Parent Workflow",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1520,
        672
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "waitBetweenTries": 3000,
      "notes": "The callback resumes the parent workflow and reports which item finished.  There could be a race condition if the parent workflow was just resumed by a different sub-workflow but hasn't entered a webhook-wait again yet.  The delay and retry mitigates for the possibility that multiple subtasks complete and call back at once."
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ \n{\n  \"finishedItemId\": $json.body.requestItemId\n}\n}}",
        "options": {}
      },
      "id": "e204e11d-8ee1-4051-8730-c8fd5d790921",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1088,
        672
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "parallel-subworkflow-target",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1556ea1f-4374-45bd-8b46-12c6264d3be1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        864,
        672
      ],
      "webhookId": "14776b45-77d7-4220-808f-2d0a38bec4de",
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-20T23:45:53.210Z",
      "updatedAt": "2025-08-20T23:45:53.210Z",
      "role": "workflow:owner",
      "workflowId": "U6L7x5VWT07CfTIB",
      "projectId": "yxFGV0GmdwTIiKaD"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-20T23:45:53.000Z",
  "versionId": "db0d0c7a-a130-4810-8a26-4a5da0901994"
}