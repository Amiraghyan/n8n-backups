{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "The Flow and the Notion Book": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Waves into Patterns Book Expert": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "The Polysingularity Letters Book": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Special Agent's Manual Book Expert": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-23T06:31:49.507Z",
  "id": "SzG5pp1npguQbd9k",
  "isArchived": false,
  "meta": null,
  "name": "Build a Voice AI Chatbot with ElevenLabs and InfraNodus Knowledge Experts",
  "nodes": [
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #1\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![Book Screenshot](https://i.ibb.co/rfxsJ4MV/circadian-special-agents-manual.png)",
        "height": 740,
        "width": 200
      },
      "id": "f7d4575b-e557-4372-ab70-62eff202045b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1660,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #2\n\nAdd your InfraNodus graph here via the HTTP node using its name in the `body.name` field.\n\nDescribe what the expert does in the Description of the tool. You can use auto-generated Graph RAG summary from InfraNodus > Graph > Project Notes\n\n![waves into patterns screen](https://i.ibb.co/1tDJSgVq/circadian-waves-into-patterns.png)",
        "height": 740,
        "width": 200
      },
      "id": "000eb31c-f623-4576-aac5-549fe41b94fc",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1880,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #3\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![flow and notion image](https://i.ibb.co/prLbFG0w/circadian-the-flow-and-notion.png)\n",
        "height": 640,
        "width": 200
      },
      "id": "cf9d6ff3-c002-4471-9612-bf21f4fe6984",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2100,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Chat Memory\n\nWe use the Simple Memory node to track the conversation's context so that the user can refer to previous messages as they converse with the model.",
        "height": 540,
        "width": 200
      },
      "id": "14e222eb-3897-4636-9d25-51480309762e",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1440,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 2. AI Agent Workflow\n\n### Chooses which tool (expert) to use, depending on the user's message. Then receives the responses and synthesizes the final answer.\n\nMake sure you describe the tools available well both in the Agent's System Prompt and in the tools' descriptions. ",
        "height": 500,
        "width": 460
      },
      "id": "551c66f4-bb33-4f3a-a585-449b0ae05517",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1240,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Chat Trigger\n\nThe conversation will be triggered when you send a message via a webhook from your Elevenlabs AI Conversational agent. \n\n### ðŸš¨ SEE THE NOTE AND THE LINK BELOW ON SETTING UP YOUR ELEVENLABS AGENT",
        "height": 580
      },
      "id": "71a30393-4330-4b21-b268-949ae88a5a10",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "983ddaa8-e4e5-4d5f-bba5-3dc69e7181f2",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1220,
        900
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}"
      },
      "id": "8c7a917c-dc69-4f7f-9a16-50d4a79f09d7",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1500,
        660
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "## 3. Respond to the User\n\nOnce the response is generated, send it back to the user's chat in Telegram.",
        "height": 500,
        "width": 260
      },
      "id": "b7ee6331-b9d9-4d71-9808-8f8be9069511",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1800,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.prompt }}",
        "options": {
          "systemMessage": "You are well-versed on Dmitry Paranyushkin's books through the tools you have access to. When you receive a user's query, assess which tools you have access to, decide on the tools to access (minimum 1, maximum 3), modify the query to better suit each tool's context, and send the request to the tool. \n\nIMPORTANT: Always access at least one of the tools and use the response to get the best possible answer.\n\nWhen you're generating a response, combine perspectives where they fit and point out discrepancies when they exist."
        }
      },
      "id": "224f1cd1-b3ea-447e-9007-aeb80d3f0b50",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1340,
        340
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "toolDescription": "Make a request to The Waves into Patterns book which is well-versed in the questions of natural cycles, variability, fractal states, dynamics, and nonequilibrium stability. Including the following topics:\n\n<MainTopics>: \n1. System Influence: scale influence multiple \n2. Pattern Dynamics: pattern variability fractal \n3. Change Balance: dynamic wave time \n4. Center Transformation: center cycle dominant \n5. Growth Stages: growth exploration period \n6. Long Strategy: term state long \n7. Seasonal Relations: moon summer natural \n8. Flow Connection: exist breaking exploring \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "waves_into_patterns"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "cde0b3a4-14b4-4bb4-8fce-a449928b2c99",
      "name": "Waves into Patterns Book Expert",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        1940,
        660
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "toolDescription": "Make a request to The Special Agent's Manual book which is well-versed in the questions of human agency, speciality, infiltration and tension dynamics, strategies, identities, finding the special in you as well as the following topics:\n\n<MainTopics>: \n1. Agent Activation: agent special activation \n2. System Dynamics: system body operating \n3. Order Flow: action time order \n4. Creative Process: create identity entity \n5. Movement Patterns: movement wave breathing \n6. Incoming Impact: incoming impulse impact \n7. Fiction Venture: fiction high risk \n8. Social Framework: preset possibility level \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "special_agents_manual"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "c69a3ee5-7156-43aa-a0e3-c29cd65a51e9",
      "name": "Special Agent's Manual Book Expert",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        1720,
        660
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "toolDescription": "The Flow and the Notion book which is well-versed in the questions of creating with someone, dreaming, making new shapes, dissipating ideas, art, and life. Including the following topics:\n\n<MainTopics>: \n1. Shape Dynamics: shape outline concentric \n2. Time Alignment: long practice time \n3. Man's Journey: bow man candle \n4. Notion Flow: image flow paranyushkin \n5. Essence Realization: process essence essential \n6. Life Choices: slave thing trace \n7. Wave Patterns: found light movement \n8. Synchrony Mediation: book circadian word \n9. Complete Vision: multiple synchrony mediate \n10. Instruction Guide: full \ninstruction foreword : instruction foreword \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "the_flow_and_notion"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "64d444b8-099f-4ce4-b3e4-17508a7ddf46",
      "name": "The Flow and the Notion Book",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        2160,
        660
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Expert #4\n\nYou can add more experts here. Just make to give them descriptive names, so the agent knows which one to connect to when it has a question. \n\n![infranodus graph](https://i.ibb.co/hRqxn8JN/circadian-conversation-book.png)",
        "height": 640,
        "width": 200
      },
      "id": "3921334c-9698-4f41-86ea-a0a18d40e539",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2320,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "toolDescription": "The Polysingularity Letters book which is well-versed in the questions of polysingularity, multiplicity, networks, networking, art, and creative approach. And also these topics:\n\n<MainTopics>: \n1. Community Dynamics: network community connected \n2. Global Equilibrium: state global change \n3. Polysingular Practice: polysingularity thinking exist \n4. Temporal Relations: time moment thing \n5. Consciousness Source: social cognition view \n6. Meaning Creation: make orthodox meaning \n7. Dmitry Connections: post dmitry minute \n8. Linguistic Variations: wa Ã« ww \n</MainTopics>",
        "method": "POST",
        "url": "https://infranodus.com/api/v1/graphAndAdvice?doNotSave=true&addStats=true&optimize=develop&includeGraph=false&includeGraphSummary=true&includeStatements=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "polysingularity_letters"
            },
            {
              "name": "prompt",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `User's request adjusted to suit this context`, 'string') }}"
            },
            {
              "name": "requestMode",
              "value": "response"
            },
            {
              "name": "aiTopics",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "99e8959e-cfb6-473e-a6d9-a4cb5921a6ae",
      "name": "The Polysingularity Letters Book",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        2360,
        660
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "171bf9a6-1390-4195-bd6b-ff3df2e27d1c",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "809974f6-7a89-444b-8faf-2691de18d75b",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        880,
        420
      ],
      "webhookId": "171bf9a6-1390-4195-bd6b-ff3df2e27d1c",
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "91faffba-609f-4a50-a63e-7dbae83e76cf",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1880,
        340
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Setting up ElevenLabs Conversational AI Agent\n\n### You will need to connect the Webhook trigger above to the Conversational AI agent of ElevenLabs. Then you can use their agent (and website widget) to converse with the experts in this workflow. Read the full tutorial at [ElevenLabs AI voice agent setup guide](https://support.noduslabs.com/hc/en-us/articles/20318967066396-How-to-Build-a-Text-Voice-AI-Agent-Chatbot-with-n8n-Elevenlabs-and-InfraNodus)\n\n1. Create an account at [https://elevenlabs.io/](https://elevenlabs.io/)\n\n2. Go to the **Conversational AI** section in the menu\n\n3. Go to **Agent > Create New Agent > Use Blank Template**\n\n4. In the **System Prompt** of the agent put the following text modified to relate to your content:\n\n```\nYou are well-versed on ... through the tools you have access to.\n1) When you receive a user's message, first answer something like \"I am consulting my knowledge and will respond soon\" or \"let me think about it and i'll get back to you\" or any other similar in meaning phrase\n2) Then forward the user's message, without any changes, to the knowledge_base tool.\n3) When you receive a response from the knowledge_base use this answer to respond to the user, use exactly the answer you received to respond.\nIMPORTANT: make the response more suitable for the conversational format making it more succint and shorter but maintaining all the specifics.\n```\n\n5. IMPORTANT: keep the reference to the `knowledge_base` tool above to let the ElevenLabs agent know that it's exactly that tool it needs to be using to access the knowledge. Replace `...` with your content. \n\n6. In the **Tools section** of the Agent's setup, click **Create a new tool**\n\n7. The name of the tool should be: **`knowledge_base`** (as you're referring to it in the system prompt)\n\n8. In the tool's description put in: \"A knowledge base on ....\" (replace ... with your topic)\n\n9. Choose the **POST method** and in the URL put the Webhook link from the n8n workflow you created in the Step 3 above. E.g. https://infranodus.app.n8n.cloud/webhook/your_hook_url\n\n10. Scroll to the **Body Parameters** and add the following parameters that will be submitted with the POST request:\n\na.  Identifier: `prompt`, Value type: LLM prompt, Description: The user's message. \n*You will use this value in the **AI Agent** node.*\n\nb. Identifier: `sessionId`, Value type: Dynamic variable, Variable name: system__conversation_id\n*You will use this in the **Chat Memory** node to keep the history of the interaction.*\n\n10. Save the tool, save the agent\n\n11. Run the test in ElevenLabs\n\n12. Check the n8n workflow logs (from Step 3) to see if the execution went well ",
        "height": 980,
        "width": 1060,
        "color": 3
      },
      "id": "01d45582-0952-488e-ac75-151ddc4b6cbe",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# AI Voice Agent that Chats to Your Experts (e.g. Books, Articles, etc)\n\n## Uses InfraNodus Knowledge Graphs as Experts (AI Agent tools)\n\n## Uses ElevenLabs for voice chat functionality\n\n## Uses an orchestrating AI Agent in n8n to choose the expert based on the query\n\n[Detailed tutorial](https://support.noduslabs.com/hc/en-us/articles/20318967066396-How-to-Build-a-Text-Voice-AI-Agent-Chatbot-with-n8n-Elevenlabs-and-InfraNodus)\n\n[Video Tutorial](https://www.youtube.com/watch?v=07-HZZQs5h0)\n\n\n[![Video tutorial](https://img.youtube.com/vi/07-HZZQs5h0/sddefault.jpg)](https://www.youtube.com/watch?v=07-HZZQs5h0)",
        "height": 980,
        "width": 740,
        "color": 5
      },
      "id": "0abbf5fb-4a62-4380-9943-b9d63b8e33fa",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "id": "c52314b3-e170-4826-8bb6-85484fdcec1a",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1220,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## LLM to Use\n\nGoogle Flash Pro models are much faster than OpenAI. However, OpenAI can be more precise in function (expert) calling.",
        "height": 660,
        "width": 200
      },
      "id": "dd7d65bd-e469-437c-839f-2455633188cb",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1160,
        620
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-23T06:32:57.000Z",
  "versionId": "ef3a828a-8ae3-4c2e-b60a-e9541fa89731"
}