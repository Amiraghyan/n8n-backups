{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add label to message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        []
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Add label to message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        []
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message1": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-04T18:13:03.651Z",
  "id": "VKwYvIAsFDYyuq8H",
  "isArchived": false,
  "meta": {
    "templateId": "5446"
  },
  "name": "AI Email Assistant: Prioritize Gmail with ChatGPT Summaries and Slack Digests",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "id": "66e1eca5-d977-4ead-8138-8eab926dfbfb",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        496,
        16
      ],
      "typeVersion": 1.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "KQ2bL39dJJ1P9hoA",
          "name": "fausto@AAA"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You're an email assistant for a busy startup founder. Classify the email content into the following fields and return **only raw JSON** (no markdown):\n\n{\n  \"summary\": [Short summary of the email in 1 sentence],\n  \"urgency\": [High, Medium, Low],\n  \"category\": [Investor, Customer Lead, Support, Spam, Other],\n  \"intent\": [Short phrase, like \"Request for call\", \"Feature request\", \"Follow-up\"]\n}\n\nAnalyze the following email:\n\nSubject: {{ $json.subject }}\nBody: {{ $json.text }}\n\nReturn only valid JSON with no extra formatting.\n"
            }
          ]
        },
        "options": {}
      },
      "id": "87e1fc81-4e18-4f7b-b3f3-d4cdc8f740a6",
      "name": "Message a model",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        592,
        240
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "WYRQt22D3Ej2FW2r",
          "name": "OpenAi Blue&"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "1ec24de2-2e64-4386-aa00-62603a63aef5",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.urgency }}",
              "rightValue": "High"
            },
            {
              "id": "0ed8beae-9ef7-46b7-9aca-5cd83412bceb",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.urgency }}",
              "rightValue": "Medium"
            }
          ]
        },
        "options": {}
      },
      "id": "c457ff9f-2b06-4b15-91e8-41fb9dff5ffa",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        1200,
        240
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let raw = $json.message?.content || $json.message || \"\";\n\n// Remove triple backticks (```json ... ```)\nraw = raw.replace(/```json|```/g, '').trim();\n\n// Fix smart quotes and other formatting problems\nraw = raw.replace(/[‚Äú‚Äù]/g, '\"').replace(/[‚Äò‚Äô]/g, \"'\");\n\ntry {\n  const parsed = JSON.parse(raw);\n\n  return {\n    summary: parsed.summary || \"No summary provided\",\n    urgency: parsed.urgency || \"Unknown\",\n    category: parsed.category || \"Unknown\",\n    intent: parsed.intent || \"Unknown\"\n  };\n} catch (err) {\n  return {\n    summary: \"‚ö†Ô∏è Failed to parse GPT output\",\n    urgency: \"Unknown\",\n    category: \"Unknown\",\n    intent: \"Unknown\",\n    error: err.message,\n    original: raw\n  };\n}\n"
      },
      "id": "ce7d28e9-9ace-4ec8-8408-0d7e6059675f",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        960,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C098UC3MSKX",
          "mode": "list",
          "cachedResultName": "alfred"
        },
        "text": "=üì¨ *Important Email Detected*  *Summary:* {{ $('Code').item.json.summary }} *Urgency:*  {{ $('Code').item.json.urgency }} üì• From: {{ $('Email Trigger (IMAP)').item.json.headers.from }}",
        "otherOptions": {}
      },
      "id": "353b70b5-eaad-4636-9bed-23aec2556d47",
      "name": "Send a message",
      "type": "n8n-nodes-base.slack",
      "position": [
        1456,
        144
      ],
      "webhookId": "8d75cfb9-ac55-4745-b37d-013995518ff1",
      "typeVersion": 2.3,
      "credentials": {
        "slackOAuth2Api": {
          "id": "7HLcXssX7whlAvYo",
          "name": "Blue&_Alfred"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $node[\"Gmail Trigger\"].json[\"id\"] }}",
        "labelIds": [
          "Label_2"
        ]
      },
      "id": "e9d6f184-b2ef-41aa-9df0-e58861a93a2e",
      "name": "Add label to message",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1456,
        288
      ],
      "webhookId": "2e09aafe-567b-4205-8905-bc0cafee56cb",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "PYWxtfY8Jt8O3raD",
          "name": "fausto@animistic"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Email Trigger (IMAP)').item.json.headers['x-apple-uuid'] }}"
      },
      "id": "f1109948-ab40-4f82-84f7-23fdbfc40d6b",
      "name": "Add label to message1",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1680,
        144
      ],
      "webhookId": "2e09aafe-567b-4205-8905-bc0cafee56cb",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "PYWxtfY8Jt8O3raD",
          "name": "fausto@animistic"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit?usp=drivesdk",
          "cachedResultName": "Inbox Log"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "value": {
            "From": "={{ $('Gmail Trigger').item.json.From }}",
            "Summary": "={{ $('Code').item.json.summary }}",
            "Urgency": "={{ $('Code').item.json.urgency }}",
            "Category": "={{ $('Code').item.json.category }}",
            "Timestamp": "={{ $now }}"
          },
          "schema": [
            {
              "id": "Timestamp",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Timestamp",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "From",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "From",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Summary",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Summary",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Urgency",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Urgency",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Category",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Category",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "73ea5151-4ef3-43b7-a73e-cd5d7f736363",
      "name": "Append row in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1888,
        144
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "f0EK8GS1JVMgDnr2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit?usp=drivesdk",
          "cachedResultName": "Inbox Log"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "value": {
            "From": "={{ $('Gmail Trigger').item.json.From }}",
            "Summary": "={{ $('Code').item.json.summary }}",
            "Urgency": "={{ $('Code').item.json.urgency }}",
            "Category": "={{ $('Code').item.json.category }}",
            "Timestamp": "={{ $now }}"
          },
          "schema": [
            {
              "id": "Timestamp",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Timestamp",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "From",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "From",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Summary",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Summary",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Urgency",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Urgency",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Category",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Category",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c588a35e-0230-4134-bf06-d6a0d3d5cda1",
      "name": "Append row in sheet1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1680,
        304
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "f0EK8GS1JVMgDnr2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 19
            }
          ]
        }
      },
      "id": "8f2cd361-317c-4aab-8712-4ac47d337af3",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        368,
        464
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit?usp=drivesdk",
          "cachedResultName": "Inbox Log"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1YQgWOSF-UA9gR1_pc6RzJ3UeANqnqi29ldoUd_2CPug/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "options": {}
      },
      "id": "34161afd-e52b-4d6d-a973-9c4c63cd218c",
      "name": "Get row(s) in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        592,
        464
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "f0EK8GS1JVMgDnr2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const today = new Date().toISOString().split(\"T\")[0];\n\nreturn items.filter(item => {\n  const timestamp = item.json.Timestamp || item.json.timestamp || \"\";\n  const urgency = (item.json.Urgency || item.json.urgency || \"\").toLowerCase();\n\n  const rowDate = new Date(timestamp).toISOString().split(\"T\")[0];\n\n  return rowDate === today && (urgency === \"high\" || urgency === \"medium\");\n});\n"
      },
      "id": "d8eeb0ff-6d67-4586-8512-4d4da995de27",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "position": [
        816,
        464
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "let text = `üóìÔ∏è *Daily Digest ‚Äì ${new Date().toLocaleDateString()}*\\n\\n`;\n\nif (items.length === 0) {\n  text += \"_No important messages today._\";\n} else {\n  items.forEach((item, index) => {\n    text += `*${index + 1}.* ${item.json.Summary || \"No summary\"}\\nUrgency: ${item.json.Urgency || \"Unknown\"}\\nCategory: ${item.json.Category || \"Unknown\"}\\nIntent: ${item.json.Intent || \"N/A\"}\\n\\n`;\n  });\n}\n\nreturn [{ json: { text } }];\n"
      },
      "id": "fbe2ac0e-b671-4bff-9ef1-db9abb7fc23c",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "position": [
        1040,
        464
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C0934EF3CRM",
          "cachedResultName": "daily-digest"
        },
        "text": "=üß† *Inbox Assistant ‚Äì Daily Digest*  \nüìÖ *{{ $now.format(\"DD MMM YYYY\") }}*  \n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n{{ $json.text }}\n",
        "otherOptions": {}
      },
      "id": "1ec81105-9ac6-4167-8dc4-c5742d99764a",
      "name": "Send a message1",
      "type": "n8n-nodes-base.slack",
      "position": [
        1280,
        464
      ],
      "webhookId": "8d75cfb9-ac55-4745-b37d-013995518ff1",
      "typeVersion": 2.3,
      "credentials": {
        "slackOAuth2Api": {
          "id": "Ojnfp4ngN5xuzLIl",
          "name": "SYCn8n"
        }
      }
    },
    {
      "parameters": {
        "format": "resolved",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2.1,
      "position": [
        368,
        240
      ],
      "id": "00d5bbfb-1bb2-4f65-8bca-a13ca0d1bc21",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "WWsEQtTj5ooKsyXC",
          "name": "IMAP: iCloud"
        }
      }
    },
    {
      "parameters": {
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-aimlapi.aimlApi",
      "typeVersion": 1,
      "position": [
        704,
        16
      ],
      "id": "c7c06fd1-ea41-4426-97e5-bba9c367d588",
      "name": "AI/ML Chat Completion",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1152,
        -64
      ],
      "id": "ae914c6b-492a-4bfb-8403-3cd23fe8029c",
      "name": "Send email",
      "webhookId": "c7da1141-8450-43af-876f-8e772bb9ba28",
      "disabled": true
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-11T02:39:52.000Z",
  "versionId": "ea3e0358-ec59-4122-b8bb-e14b62041bea"
}