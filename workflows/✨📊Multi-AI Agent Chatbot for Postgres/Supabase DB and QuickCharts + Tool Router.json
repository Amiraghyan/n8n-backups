{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "🤖Primary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute SQL Query": {
      "ai_tool": [
        [
          {
            "node": "🤖Secondary Postgres Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "🔀Tool Agent Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "query_db_tool": {
      "ai_tool": [
        [
          {
            "node": "🤖Primary Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "generate_quickchart_tool": {
      "ai_tool": [
        [
          {
            "node": "🤖Primary Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create QuickChart": {
      "main": [
        [
          {
            "node": "Final QuickChart URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QuickChart Object Schema": {
      "ai_outputParser": [
        [
          {
            "node": "🤖Secondary QuickChart Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "🤖Primary Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini-2": {
      "ai_languageModel": [
        [
          {
            "node": "🤖Secondary QuickChart Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "🤖Secondary QuickChart Agent": {
      "main": [
        [
          {
            "node": "QuickChart GET URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔀Tool Agent Router": {
      "main": [
        [
          {
            "node": "🤖Secondary Postgres Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "🤖Secondary QuickChart Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Table Definitions": {
      "ai_tool": [
        [
          {
            "node": "🤖Secondary Postgres Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "🤖Primary Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "QuickChart GET URL": {
      "main": [
        [
          {
            "node": "Create QuickChart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DB Schema and Tables": {
      "ai_tool": [
        [
          {
            "node": "🤖Secondary Postgres Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "gpt-40-mini-1": {
      "ai_languageModel": [
        [
          {
            "node": "🤖Secondary Postgres Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-21T01:08:31.501Z",
  "id": "17fmejX3CRrNdzOR",
  "isArchived": false,
  "meta": null,
  "name": "✨📊Multi-AI Agent Chatbot for Postgres/Supabase DB and QuickCharts + Tool Router",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "577360bd-9b0a-4345-867d-6270e54a1407",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -352,
        32
      ],
      "webhookId": "faddb40a-7048-4398-a0f9-d239a19c32ce",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to query the database with SQL queries",
        "operation": "executeQuery",
        "query": "{{ $fromAI(\"sql_query\", \"SQL Query\") }}",
        "options": {}
      },
      "id": "8b0cdb83-558b-4837-9729-fc391b29995b",
      "name": "Execute SQL Query",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        288,
        944
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "user_prompt"
            },
            {
              "name": "route"
            },
            {
              "name": "db_records"
            }
          ]
        }
      },
      "id": "698b1cf7-6dad-4e74-a1a6-bd1b4caae295",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -656,
        1088
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "name": "query_database_tool",
        "description": "Use this tool to query the database",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{  $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "route": "query_database_tool",
            "user_prompt": "={{ $('When chat message received').item.json.chatInput }}"
          },
          "schema": [
            {
              "id": "user_prompt",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "user_prompt",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "route",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "route",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "user_prompt"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "3e5ffdcb-3909-4362-a4fa-3f4035449f1e",
      "name": "query_db_tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        544,
        352
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "generate_chart_tool",
        "description": "Use this tool to generate a chart with QuickChart",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{  $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "route": "generate_chart_tool",
            "db_records": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('db_records', `The database records`, 'string') }}",
            "user_prompt": "={{ $('When chat message received').item.json.chatInput }}"
          },
          "schema": [
            {
              "id": "user_prompt",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "user_prompt",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "route",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "route",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "db_records",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "db_records",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "user_prompt"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "2b592899-9d85-4b5a-8fe1-920cfe14f659",
      "name": "generate_quickchart_tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        800,
        352
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "={{ encodeURI($json.url) }}",
        "options": {}
      },
      "id": "34ea44bc-7370-4cd9-a2ff-85940a1b9128",
      "name": "Create QuickChart",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        608,
        1312
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"type\": \"bar\",\n  \"data\": {\n    \"labels\": [\"R270684\", \"R274295\", \"R276352\", \"R277914\", \"R280108\"],\n    \"datasets\": [\n      {\n        \"label\": \"List Price\",\n        \"data\": [2149000, 924900, 924900, 1288000, 1198000],\n        \"backgroundColor\": \"#FF6384\"\n      },\n      {\n        \"label\": \"Days On Market\",\n        \"data\": [101, 91, 123, 136, 185],\n        \"backgroundColor\": \"#36A2EB\"\n      }\n    ]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"min\": 0,\n        \"max\": 2200000\n      }\n    }\n  }\n}"
      },
      "id": "3fa3e2de-dc16-4254-b2fa-31603498962f",
      "name": "QuickChart Object Schema",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        288,
        1584
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "id": "279b0fa4-580b-42cc-bc0d-5b003b0ffd22",
      "name": "gpt-4o-mini",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        16,
        352
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "id",
          "value": "=gpt-4o-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "id": "92c75736-af7d-412b-9d8a-729e0fdb92ec",
      "name": "gpt-4o-mini-2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        16,
        1584
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## 🤖Primary AI Manager Agent",
        "height": 600,
        "width": 1100,
        "color": 5
      },
      "id": "95048628-f649-4a42-8fda-0899d0e742d1",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -96,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant that answers the users questions by using the tools provided.\n\n## TOOLS\n- query_database_tool: Use this tool to query the database\n- generate_chart_tool: Use this tool to generate a chart with QuickChart\n\nAlways provide the results of the database query and the link for the chart when applicable."
        }
      },
      "id": "bcec7b75-531c-403b-97e6-76d8ac30fd1a",
      "name": "🤖Primary Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        304,
        32
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_prompt }}",
        "options": {
          "systemMessage": "You are a helpful assistant with tools for querying a SQL database.  Use the tools provided to query the database."
        }
      },
      "id": "863d4f00-7120-4f05-92af-c88c4aaf9464",
      "name": "🤖Secondary Postgres Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        304,
        672
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Your task is to generate a Chart.js configuration object with the following specifications:\n- Chart type: bar unless otherwise indicated\n- Labels: Use the ML # from each record unless otherwise indicated\n- Show bar for list price if not otherwise indicated\n- Return only the raw JSON object without code fences or explanations\n\nThis is the user prompt: {{ $json.user_prompt }}\nThis is the result of the SQL query: {{ $json.db_records }}",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "8e5bdb4e-7f01-419f-8994-a0e97ba44626",
      "name": "🤖Secondary QuickChart Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        64,
        1312
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "35b1e13e-6157-48d0-85af-3cd33260eae1",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "=query_database_tool"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "🔍query"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ff5f97fb-0f18-4bf9-b16c-3d0b3bc3c7f4",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "=generate_chart_tool"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "📊chart"
            }
          ]
        },
        "options": {}
      },
      "id": "4e2edc7c-24ac-4fe0-a68f-4530ca14bd0d",
      "name": "🔀Tool Agent Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        -352,
        1088
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to get table definition to find all columns and types",
        "operation": "executeQuery",
        "query": "select\n  c.column_name,\n  c.data_type,\n  c.is_nullable,\n  c.column_default,\n  tc.constraint_type,\n  ccu.table_name AS referenced_table,\n  ccu.column_name AS referenced_column\nfrom\n  information_schema.columns c\nLEFT join\n  information_schema.key_column_usage kcu\n  ON c.table_name = kcu.table_name\n  AND c.column_name = kcu.column_name\nLEFT join\n  information_schema.table_constraints tc\n  ON kcu.constraint_name = tc.constraint_name\n  AND tc.constraint_type = 'FOREIGN KEY'\nLEFT join\n  information_schema.constraint_column_usage ccu\n  ON tc.constraint_name = ccu.constraint_name\nwhere\n  c.table_name = '{{ $fromAI(\"table_name\") }}'\n  AND c.table_schema = '{{ $fromAI(\"schema_name\") }}'\norder by\n  c.ordinal_position",
        "options": {}
      },
      "id": "9ce81a77-620d-4906-8240-2b3e1118ea67",
      "name": "Table Definitions",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        800,
        944
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "tableName": "={{ $workflow.id }}_chat_history"
      },
      "id": "aff9cc72-ba0c-4c34-bb49-a283b47b595b",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "position": [
        288,
        352
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "## QuickChart Tool",
        "height": 240,
        "color": 7
      },
      "id": "1a34eaa9-809f-4357-b139-f5b3f729aaa7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Postgres Tool",
        "height": 240,
        "color": 7
      },
      "id": "46644ab2-bdb9-4c82-b30d-e3c8f2d5973e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## LLM",
        "height": 240,
        "color": 7
      },
      "id": "cbb8c654-d3a5-406c-b122-1fd48de10e0a",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -64,
        272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Chat Memory",
        "height": 240,
        "color": 7
      },
      "id": "c6fcb8d1-29ea-4b4d-9d15-84d52f8d7ae4",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 👍Start Here",
        "height": 280,
        "width": 340,
        "color": 4
      },
      "id": "b12d18c5-8885-4316-a86e-247125b9914a",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ⚒️🤖Secondary Postgres Tool Agent ",
        "height": 560,
        "width": 1100,
        "color": 6
      },
      "id": "0c82ae47-c1d6-4423-95ae-28786e5cb4b0",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -96,
        592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "22ff5d62-c5c7-4c9c-997f-331e1edad8ea",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -64,
        864
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "37a65bb1-bf4e-4205-9767-ec4caa9d90fa",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        864
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "fc1ea118-1cbc-4d79-9fe2-91cfa03ae236",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        864
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "91af66d7-0c79-46af-a4a7-5f2136560cfe",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        864
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Tool Agent Router 🔀",
        "height": 320,
        "width": 340,
        "color": 3
      },
      "id": "2f510f9e-bf49-4a72-b6f5-c99bacededbc",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        992
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ⚒️🤖Secondary QuickChart Tool Agent",
        "height": 600,
        "width": 1100,
        "color": 6
      },
      "id": "ba180dcf-59a5-4a53-9461-b86818ea8991",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -96,
        1184
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "7bfb1568-ef8d-46bc-9385-4bbc58fbb40a",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        1504
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 240,
        "color": 7
      },
      "id": "71607226-4e88-4221-ab70-18f0f2525170",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -64,
        1504
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "63bab42a-9b9b-4756-88d2-f41cff9a1ded",
              "name": "quickchart_url",
              "type": "string",
              "value": "={{ encodeURI($json.url) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "728dac29-9dfd-4e89-9ffb-6c97482e34d0",
      "name": "Final QuickChart URL",
      "type": "n8n-nodes-base.set",
      "position": [
        800,
        1312
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d69995ae-413e-49e7-b6ec-17e9e034e4b6",
              "name": "url",
              "type": "string",
              "value": "={{ \"https://quickchart.io/chart?width=250&height=150&chart=\" + $json.output.toJsonString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e366079d-9721-4680-b062-53ce4580a22f",
      "name": "QuickChart GET URL",
      "type": "n8n-nodes-base.set",
      "position": [
        400,
        1312
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "# ✨📊Multi-AI Agent Chatbot for Postgres/Supabase DB and QuickCharts + Tool Router",
        "height": 1980,
        "width": 1760,
        "color": 7
      },
      "id": "9d452954-0dfe-447a-bc07-d7c5e0847c6e",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setup\n\n1. Create a Postgres compatible database (Supabase)\n\n2. Add your Postgres and OpenAI credentials\n\n3. Click Chat button and start chatting with your database and creating QuickChart to visualize the results\n",
        "height": 240,
        "width": 540
      },
      "id": "c88b411c-b5f5-4995-badc-a42010859740",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -672,
        272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Postgres Tools Used\n\n1. **Execute SQL Query** \nUsed to execute any query generated by the agent.\n\n2. **DB Schema and Tables** \nReturns the list of all the tables with its schema name.\n\n3. **Table Definition** \nReturns table details like column names, foreign keys and more of a particular table in a schema.",
        "height": 296,
        "width": 542
      },
      "id": "55d87dbd-d925-49f8-8d11-c0dfa368df77",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -672,
        592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Generate a Quickchart\n\n**Secondary QuickChart Agent Tool**\nThis section handles the chart generation process through several steps by sending the database records and user prompt to OpenAI to create a JSON object based on Chart.js and QuickChart.io definitions\n\n**QuickChart GET URL node**\nThis sections adds chart definitions to a QuickChart.io URL\n\n**Create QuickChart node**\nThis sections sends chart queries to QuickCharts with a defined JSON format\n\n\n\nThis integration allows you to dynamically generate charts based on data queries, with AI assistance for formatting and optimization.\n\n\n",
        "height": 376,
        "width": 542
      },
      "id": "f2e0db0e-8411-4d51-8d0b-b1d109b720a5",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -672,
        1408
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to get a list of all tables with their schema in the database",
        "operation": "executeQuery",
        "query": "SELECT \n    table_schema,\n    table_name\nFROM information_schema.tables\nWHERE table_type = 'BASE TABLE'\n    AND table_schema NOT IN ('pg_catalog', 'information_schema')\nORDER BY table_schema, table_name;",
        "options": {}
      },
      "id": "58e5d3ea-6448-4316-8c49-40c1d7c90edc",
      "name": "DB Schema and Tables",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        544,
        944
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "id": "6f4a9109-3389-49b4-a0af-d89fa70fb0b3",
      "name": "gpt-40-mini-1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        16,
        944
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## QuickChart Schema\nAdjust the QuickChart Schema to match your use case.\n\nhttps://quickchart.io/documentation/",
        "height": 120,
        "width": 440
      },
      "id": "5ddab288-b8b1-44c1-b0dd-e289cf0b1608",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        1632
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Chart Size\nAdjust the chart size in the QuickChart GET URL node.\n",
        "height": 100,
        "width": 440
      },
      "id": "5865b179-759b-4c53-98ac-0bb4f15b9325",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        1504
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-21T01:08:31.505Z",
      "updatedAt": "2025-08-21T01:08:31.505Z",
      "role": "workflow:owner",
      "workflowId": "17fmejX3CRrNdzOR",
      "projectId": "yxFGV0GmdwTIiKaD"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-21T01:09:57.000Z",
  "versionId": "8c9b251e-72ad-4792-9201-56304524baa3"
}