{
  "active": false,
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "OpenAI - To Spanish",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI - To English",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI - Correct Grammar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI - Make Shorter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI - Make Longer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - To English": {
      "main": [
        [
          {
            "node": "Respond to Shortcut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - To Spanish": {
      "main": [
        [
          {
            "node": "Respond to Shortcut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Make Longer": {
      "main": [
        [
          {
            "node": "Respond to Shortcut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Make Shorter": {
      "main": [
        [
          {
            "node": "Respond to Shortcut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook from Shortcut": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Correct Grammar": {
      "main": [
        [
          {
            "node": "Respond to Shortcut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-24T15:15:05.343Z",
  "id": "57bVgzLcivppx21x",
  "isArchived": false,
  "meta": null,
  "name": "Text automations using Apple Shortcuts",
  "nodes": [
    {
      "parameters": {
        "content": "## Workflow: Text automations using Apple Shortcuts\n\n**Overview**\n- This workflow answers user requests sent via Apple Shortcuts\n- Several Shortcuts call the same webhook, with a query and a type of query\n- Types of query are:\n  - translate to english\n  - translate to spanish\n  - correct grammar (without changing the actual content)\n  - make content shorter\n  - make content longer\n\n\n**How it works**\n- Select a text you are writing\n- Launch the shortcut\n- The text is sent to the webhook\n- Depending on the type of request, a different prompt is used\n- Each request is sent to an OpenAI node\n- The workflow responds to the request with the response from GPT\n- Shortcut replace the selected text with the new one\n\n**How to use it**\n- Activate the workflow\n- Download [this Shortcut template](https://drive.usercontent.google.com/u/0/uc?id=16zs5iJX7KeX_4e0SoV49_KfbU7-EF0NE&export=download)\n- Install the shortcut\n- In step 2 of the shortcut, change the url of the Webhook\n- In Shortcut details, \"add Keyboard Shortcut\" with the key you want to use to launch the shortcut\n- Go to settings, advanced, check \"Allow running scripts\"\n- You are ready to use the shortcut. Select a text and hit the keyboard shortcut you just defined\n\n\n**Notes**\n- If you use rich formatting, you'll have to test multiple ways to replace characters in the output. For example, you might use `{{ $json.message.content.output.replaceAll('\\n', \"<br/>\") }}` in the \"Respond to Shortcut\" node depending on the app you use most.\n- This is a basic example that you can extend and modify at your will\n- You can duplicate and modify the example shortcut based on your need, as well as making new automations in this workflow.",
        "height": 843.1482165886073,
        "width": 681.8337349708484,
        "color": 7
      },
      "id": "6c4f2409-e1f3-4ed5-a62b-a616dc7ad34a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "spanish"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "spanish"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "bedb302f-646c-4dcd-8246-1fcfecfe3f2e",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "english"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "english"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "94e6cf7d-576d-4ad9-85b0-c6b945eb41b7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "grammar"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "grammar"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "1ed0d1e1-2df0-4f8d-b102-4004a25919ed",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "shorter"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "shorter"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4756df03-7e7c-4e28-9b37-14684326b083",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "longer"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "longer"
            }
          ]
        },
        "options": {}
      },
      "id": "4e2e63c7-2236-4c43-bf59-ac7ccdaab4b1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        940,
        340
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.message.content.output.replaceAll('\\n', '<br/>') }}",
        "options": {}
      },
      "id": "2d78bd66-209c-4ee9-9021-cde16c961690",
      "name": "Respond to Shortcut",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1760,
        360
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "shortcut-global-as",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "86bd5925-bf20-4ed8-9f07-7e0653d003ee",
      "name": "Webhook from Shortcut",
      "type": "n8n-nodes-base.webhook",
      "position": [
        760,
        360
      ],
      "webhookId": "e4ddadd2-a127-4690-98ca-e9ee75c1bdd6",
      "typeVersion": 2
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Summarize this content a little bit (5% shorter)\nOutput a JSON with a single field: output",
              "role": "system"
            },
            {
              "content": "={{ $json.body.content }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "4f716dad-a6d9-45d0-b42b-1991c1c4719a",
      "name": "OpenAI - Make Shorter",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1220,
        500
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Make this content a little longer (5% longer)\nOutput a JSON with a single field: output",
              "role": "system"
            },
            {
              "content": "={{ $json.body.content }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "e4f7e5a0-1d42-4f87-891b-462c95a2603a",
      "name": "OpenAI - Make Longer",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1220,
        640
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Correct grammar only, don't change the actual contents.\nOutput a JSON with a single field: output",
              "role": "system"
            },
            {
              "content": "={{ $json.body.content }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "0df2b6cb-4039-4730-b4c4-94a7c313c62f",
      "name": "OpenAI - Correct Grammar",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1220,
        360
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Translate this message to Spanish.\nOutput a JSON with a single field: output",
              "role": "system"
            },
            {
              "content": "={{ $json.body.content }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "255e03a5-c4de-4a3f-9242-ba592b97f1de",
      "name": "OpenAI - To Spanish",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1220,
        80
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Translate this message to English.\nOutput a JSON with a single field: output",
              "role": "system"
            },
            {
              "content": "={{ $json.body.content }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "03735f3e-16b0-421f-b54a-772554b17291",
      "name": "OpenAI - To English",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1220,
        220
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "content": "### Check these explanations [< 3 min]\n\n[![Check the explanations](https://cdn.loom.com/sessions/thumbnails/c5b657568af64bb1b50fa8e8a91c45d1-1db3990a618986c9-full-play.gif)](https://www.loom.com/share/c5b657568af64bb1b50fa8e8a91c45d1?sid=a406be73-55eb-4754-9f51-9ddf49b22d69)",
        "height": 341.88919758842485,
        "width": 469.15174499329123,
        "color": 7
      },
      "id": "9bee7ab5-fbb8-4ed3-ad0f-5524ffc5eabb",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        860
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-24T15:15:05.000Z",
  "versionId": "babfe5f6-2930-419b-9ea3-4c49e1ab17d5"
}