{
  "active": false,
  "connections": {
    "Exist?": {
      "main": [
        [
          {
            "node": "Get Fulltext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Fulltext": {
      "main": [
        [
          {
            "node": "Analyze LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get transcript": {
      "main": [
        [
          {
            "node": "Exist?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set YouTube URL": {
      "main": [
        [
          {
            "node": "YouTube Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Video ID": {
      "main": [
        [
          {
            "node": "Generate transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze LLM Chain": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Analyze LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Generate transcript": {
      "main": [
        [
          {
            "node": "Get transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Analyze LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Set YouTube URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-04T03:10:55.695Z",
  "id": "32Ydaa8XkAR2r30k",
  "meta": {
    "templateId": "2964"
  },
  "name": "Free YouTube Video Analyzer with AI-Powered Summaries & Email Alerts",
  "nodes": [
    {
      "parameters": {},
      "id": "fbf55337-4b64-43f5-9fed-a08b4ab43a8c",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        380,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const extractYoutubeId = (url) => {\n  // Regex pattern that matches both youtu.be and youtube.com URLs\n  const pattern = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(pattern);\n  return match ? match[1] : null;\n};\n\n// Input URL from previous node\nconst youtubeUrl = items[0].json.youtubeUrl; // Adjust this based on your workflow\n\n// Process the URL and return the video ID\nreturn [{\n  json: {\n    videoId: extractYoutubeId(youtubeUrl)\n  }\n}];\n"
      },
      "id": "48f88f6d-9817-4984-beb0-e37fff747317",
      "name": "YouTube Video ID",
      "type": "n8n-nodes-base.code",
      "position": [
        820,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "88b5df30-064a-4735-9753-96ca7c272642",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1960,
        380
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "dbsbEP9NpcetZP6N",
          "name": "Research Assistant"
        }
      }
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1:free",
        "options": {}
      },
      "id": "1b7c052d-445e-476d-97be-24f7f625af69",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "position": [
        1980,
        700
      ],
      "typeVersion": 1,
      "credentials": {
        "openRouterApi": {
          "id": "ru25OpA66L1ExedM",
          "name": "OpenRouter"
        }
      }
    },
    {
      "parameters": {
        "model": "deepseek-reasoner",
        "options": {}
      },
      "id": "afc522d2-50ff-49a2-a192-a26c4ae7057d",
      "name": "DeepSeek Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "position": [
        2240,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"title\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"text\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "id": "444ca87e-e9c6-4841-b868-f51474a36f8f",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        2180,
        360
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "Get a FREE API on youtube-transcript.io and insert the Authentication",
        "height": 260,
        "width": 220
      },
      "id": "f5e30fba-d13a-492e-b7d9-e6006436af87",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1000,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fromEmail": "fausto_ramirez@mac.com",
        "toEmail": "fausto@sellyourcar.ai",
        "subject": "={{ $json.output.title }}",
        "emailFormat": "text",
        "text": "={{ $json.output.text }}",
        "options": {}
      },
      "id": "16335cd6-2ad1-4d2a-a908-68e6908f2ecc",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        2360,
        180
      ],
      "webhookId": "12b73cc6-5aa0-44f4-8e5b-96aea0e59300",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "Dl8B2JzKzTKkFx5i",
          "name": "SMTP account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.youtube-transcript.io/api/transcripts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n  \"ids\": [\"{{ $json.videoId }}\"] \n} ",
        "options": {}
      },
      "id": "59170266-f914-4e7c-805c-0014ca2f77de",
      "name": "Generate transcript",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1060,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "3aefe867-1533-41e5-b5e9-e0fb94eed082",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.transcript }}",
              "rightValue": "null"
            }
          ]
        },
        "options": {}
      },
      "id": "d73aef68-ad5f-4cca-85fb-cb2cb4ac110a",
      "name": "Exist?",
      "type": "n8n-nodes-base.if",
      "position": [
        1520,
        240
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.fulltext }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Please analyze the given text and create a structured summary following these guidelines:\n\n1. Insert what is requested in a json in the \"text\" variable and also generate a title that will be inserted in the \"title\" variable of the response json.\n2. Under each header:\n   - List only the most essential concepts and key points\n   - Use bullet points for clarity\n   - Keep explanations concise\n   - Preserve technical accuracy\n   - Highlight key terms in bold\n3. Organize the information in this sequence:\n   - Definition/Background\n   - Main characteristics\n   - Implementation details\n   - Advantages/Disadvantages\n4. Format requirements:\n   - Use markdown formatting\n   - Keep bullet points simple (no nesting)\n   - Bold important terms \n   - Use tables for comparisons\n   - Include relevant technical details\n\nPlease provide a clear, structured summarythat captures the core concepts while maintaining technical accuracy."
            }
          ]
        }
      },
      "id": "133529a4-dd56-4454-8862-053f63c04687",
      "name": "Analyze LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        2000,
        180
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3ee42e4c-3cee-4934-97e7-64c96b5691ed",
              "name": "youtubeUrl",
              "type": "string",
              "value": "=https://www.youtube.com/watch?v=v6hi4TlYnbw"
            }
          ]
        },
        "options": {}
      },
      "id": "ec77b844-125b-40e3-bc49-0f4b89aed427",
      "name": "Set YouTube URL",
      "type": "n8n-nodes-base.set",
      "position": [
        580,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "Get the Youtube video ID from the URL",
        "height": 260,
        "width": 220
      },
      "id": "10080965-e266-48ca-8a8c-934e76cfa127",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d7dab19f-0275-4454-a270-420f20090d9b",
              "name": "transcript",
              "type": "array",
              "value": "={{ $json.tracks[0].transcript }}"
            },
            {
              "id": "ec7da104-7c1e-4a60-8e94-73cd9cbdc930",
              "name": "language",
              "type": "string",
              "value": "={{ $json.tracks[0].language }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ab1ae8d-dad8-4795-9f67-9252370ee8ce",
      "name": "Get transcript",
      "type": "n8n-nodes-base.set",
      "position": [
        1300,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "Get the Youtube video transcript",
        "height": 260,
        "width": 220
      },
      "id": "971ccc67-3fd2-4b13-86de-a7a11903e2ec",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1240,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Not all videos have text translations of the video",
        "height": 260,
        "width": 200
      },
      "id": "0ee50d32-14f7-4fad-95ab-0e5ae949c24c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1480,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "let fulltext = \"\";\n\nfor (const item of $input.all()[0].json.transcript) {\n  fulltext += item.text + \" \";\n}\n\nfulltext = fulltext.trim();\n\nreturn { fulltext };"
      },
      "id": "89a4e59a-58fa-4e3c-bb30-4a6a816e8e15",
      "name": "Get Fulltext",
      "type": "n8n-nodes-base.code",
      "position": [
        1780,
        180
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "Get the full video transcript in a single variable",
        "height": 240,
        "width": 220
      },
      "id": "87520f4d-4a05-4953-aadc-324625c8e769",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1720,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Generate detailed video analysis and create a title",
        "height": 240,
        "width": 340
      },
      "id": "bb3ffedf-e547-439d-a25a-0dcb2f58b86c",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1960,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## YouTube Video Analyzer\n\nThis workflow is designed to analyze YouTube videos by extracting their transcripts, summarizing the content using AI models, and sending the analysis via email.\n\nThis workflow is ideal for content creators, marketers, or anyone who needs to quickly analyze and summarize YouTube videos for research, content planning, or educational purposes.",
        "height": 200,
        "width": 660,
        "color": 3
      },
      "id": "c5e7337a-1ddb-4a82-854d-dfeb6e824172",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        -80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Set Youtube video URL manually",
        "height": 260,
        "width": 200
      },
      "id": "68fecd4f-12be-4a81-b5b9-c0419464e27e",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        160
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {
    "When clicking ‘Test workflow’": [
      {
        "json": {}
      }
    ]
  },
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-04T19:52:17.000Z",
  "versionId": "6e04d8db-767b-407f-aa19-5c06403e99a2"
}