{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Comments Sentiment Analysis Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Summary Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Key Points Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Researcher",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "article": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text → Audio1": {
      "main": [
        []
      ]
    },
    "Google Drive": {
      "main": [
        []
      ]
    },
    "Researcher": {
      "main": [
        [
          {
            "node": "Title Generator Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Knowledge Base": {
      "main": [
        []
      ]
    },
    "Comments": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Comments Sentiment Analysis Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Positive": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Neutral": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Negative": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Youtube Metadata": {
      "main": [
        [
          {
            "node": "Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Metadata": {
      "main": [
        [
          {
            "node": "Youtube Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Transcript": {
      "main": [
        [
          {
            "node": "Summary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text → Audio": {
      "main": [
        [
          {
            "node": "Knowledge Base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "sNPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Stats": {
      "main": [
        []
      ]
    },
    "SEO Writer Agent": {
      "main": [
        [
          {
            "node": "Editor Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editor Agent": {
      "main": [
        [
          {
            "node": "Formatter Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summary Agent": {
      "main": [
        [
          {
            "node": "Key Points Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Key Points Agent": {
      "main": [
        [
          {
            "node": "Text → Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comments Sentiment Analysis Agent": {
      "main": [
        [
          {
            "node": "Positive",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Neutral",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Negative",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Title Generator Agent": {
      "main": [
        [
          {
            "node": "SEO Writer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatter Agent": {
      "main": [
        [
          {
            "node": "article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI1": {
      "ai_tool": [
        []
      ]
    },
    "SerpAPI2": {
      "ai_tool": [
        []
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Videos2process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI3": {
      "ai_tool": [
        []
      ]
    },
    ".": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Now": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Researcher",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "To Process": {
      "main": [
        [
          {
            "node": "APIfy_YT_Scrap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "to Process": {
      "main": [
        [
          {
            "node": "To Process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "APIfy_YT_Scrap": {
      "main": [
        [
          {
            "node": "Channel Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Videos": {
      "main": [
        [
          {
            "node": "Channel Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable": {
      "main": [
        [
          {
            "node": "to Process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split each": {
      "main": [
        [
          {
            "node": "Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Serp YT Search": {
      "main": [
        [
          {
            "node": "SplitVideos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video from Channel": {
      "main": [
        [
          {
            "node": "Videos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Videos": {
      "main": [
        [
          {
            "node": "Video from Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitVideos": {
      "main": [
        [
          {
            "node": "Split each",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Channel": {
      "main": [
        [
          {
            "node": "Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Videos1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Channel": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Videos2process": {
      "main": [
        [
          {
            "node": "Prompts2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sNPS": {
      "main": [
        [
          {
            "node": "Video Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts2": {
      "main": [
        [
          {
            "node": "Youtube Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-19T09:12:19.494Z",
  "id": "asWSVRBH37s7ulez",
  "meta": null,
  "name": "AAA YT: Content Gen",
  "nodes": [
    {
      "parameters": {},
      "id": "0dece2d8-8301-499e-8d84-7005f0f89454",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1660,
        -680
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cd072210-83ac-44dc-8057-1ea6c0296768",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2960,
        80
      ],
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "model": "o1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3240,
        -440
      ],
      "id": "322d4d4d-7cc1-4e27-ae53-2b3f62d074b2",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3620,
        -440
      ],
      "id": "5ae57c35-58f9-4408-be16-d23b3c11fa4d",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1840,
        1320
      ],
      "id": "eaad669b-e18a-4c3e-b15a-00905a356c4c",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $('Formatter Agent').item.json.message.content }}",
        "name": "=Article_{{ $now }}-{{ $json.Title }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "https://drive.google.com/drive/u/3/folders/13UmSvnHS93koswjnxKh0FhomXy49q3aO",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3980,
        1060
      ],
      "id": "d53ff90f-de2f-4200-8e2b-178e3308ee96",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "HR5Tk4YDcaNJda9N",
          "name": "Google Drive Sergio"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a0297ea-5830-47b6-888b-e832a65b594a",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "54356597-da80-45e4-a073-91d293cb0796",
              "name": "Research",
              "value": "={{ $('Researcher').item.json.output }}",
              "type": "string"
            },
            {
              "id": "328a4bbb-ee0c-4754-b731-249c7d6578f3",
              "name": "SEOwriteup",
              "value": "={{ $('SEO Writer Agent').item.json.message.content }}",
              "type": "string"
            },
            {
              "id": "dec9bb57-2935-46bb-ba87-71d99db09848",
              "name": "Edited",
              "value": "={{ $('Editor Agent').item.json.message.content }}",
              "type": "string"
            },
            {
              "id": "03fcc827-01c0-45a7-ab68-e4ca64a01791",
              "name": "Formatted",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "11e7f038-ccb9-4e56-93cd-cd6b5ddc2ec8",
              "name": "Title",
              "value": "={{ $('Title Generator Agent').item.json.message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3760,
        1060
      ],
      "id": "45f9a1c3-95ba-415d-bfa1-e96853a443e7",
      "name": "article"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $('Formatter Agent').item.json.message.content }}",
        "options": {
          "response_format": "mp3",
          "binaryPropertyOutput": "audio"
        }
      },
      "id": "64448d70-af73-4429-9651-8ecd247b0dd3",
      "name": "Text → Audio1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        3980,
        1280
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "=Today is: {{ $now }}\nYou are a web searcher agent assistant. You will be provided a topic or headline for an SEO blog article. Your task is to search the web for up to date and reliable factual information on this topic and summarize key points to provide helpful content. Be concise and clear, focusing on details that would enhance the article's SEO value and informative quality. \nPost should include a captivating and thought-provoking description. Description should be engaging and useful. \nRandomize the overall post so that you don't create same post every time. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1860,
        1060
      ],
      "id": "6204594e-a241-4aa0-acb9-418d3744c397",
      "name": "Researcher"
    },
    {
      "parameters": {
        "inputDataFieldName": "={{\"data\"}}",
        "name": "=yt_audiosumm-{{ $('Youtube Transcript').item.json.videoTitle }}.mp3",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1dFgXwWbG6-uj8iRKqUHKerkq0RW1bso_",
          "mode": "list",
          "cachedResultName": "KB",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1dFgXwWbG6-uj8iRKqUHKerkq0RW1bso_"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        4200,
        -600
      ],
      "id": "0df0a11b-2d85-4f38-8d10-fffe20e73e4f",
      "name": "Knowledge Base",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "HR5Tk4YDcaNJda9N",
          "name": "Google Drive Sergio"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/acts/insight_api_labs~youtube-comments-1-month---reliable-efficient/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_urls\": [\n    {\n      \"url\": \"{{ $('Videos2process').item.json.Url }}\",\n      \"method\": \"POST\"\n    }\n  ],\n  \"total_comments\": 100\n} ",
        "options": {
          "batching": {
            "batch": {}
          }
        }
      },
      "id": "1b57f7ec-f7f8-4080-b5a4-512c9fd9e52d",
      "name": "Comments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        -60
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": " data.items, comment",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2720,
        -60
      ],
      "id": "829ff6f0-b4c0-4e1e-a0f1-95c403de1e1b",
      "name": "Split Out"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3380,
        -220
      ],
      "id": "53c0cc01-7d44-4964-bc17-83ce6d072df2",
      "name": "Positive"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3380,
        -60
      ],
      "id": "a36731c9-a7a9-4bc6-b4c1-efb02b65eedf",
      "name": "Neutral"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3380,
        100
      ],
      "id": "f0fbcf42-9306-4403-aa76-fb9f2e082a23",
      "name": "Negative"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2784ea3c-15e0-41ab-8b2c-a8e706a08135",
              "name": "Positive",
              "value": "={{ $('Positive').item.json.count_sentimentAnalysis }}",
              "type": "number"
            },
            {
              "id": "6eeb2c38-0911-46eb-9967-6024110e7813",
              "name": "Neutral",
              "value": "={{ $('Neutral').item.json.count_sentimentAnalysis }}",
              "type": "string"
            },
            {
              "id": "8e4b9e08-4105-406f-819f-aff327ed1a82",
              "name": "Negative",
              "value": "={{ $('Negative').item.json.count_sentimentAnalysis }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4260,
        -60
      ],
      "id": "a8e02217-ce58-442b-9bc7-465804ab7fe7",
      "name": "Video Stats",
      "alwaysOutputData": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $('Videos2process').item.json.Id + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "c4cdde10-ac16-44fb-b05a-673fa93e4515",
      "name": "Youtube Metadata",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2500,
        -600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "febfd458-f945-465e-a2b7-e46d74e6849b",
              "name": "items[0].kind",
              "value": "={{ $json.items[0].kind }}",
              "type": "string"
            },
            {
              "id": "5e765835-d80e-4dee-9aaa-44ea0faa0744",
              "name": "items[0].snippet.publishedAt",
              "value": "={{ $json.items[0].snippet.publishedAt }}",
              "type": "string"
            },
            {
              "id": "0c8bac8e-fde7-4911-8936-1ce164521644",
              "name": "items[0].snippet.channelId",
              "value": "={{ $json.items[0].snippet.channelId }}",
              "type": "string"
            },
            {
              "id": "4cec6b39-d436-4222-bd9f-af6360c6741b",
              "name": "items[0].snippet.channelTitle",
              "value": "={{ $json.items[0].snippet.channelTitle }}",
              "type": "string"
            },
            {
              "id": "cf702f06-e545-41a6-b918-436253fda505",
              "name": "items[0].snippet.categoryId",
              "value": "={{ $json.items[0].snippet.categoryId }}",
              "type": "string"
            },
            {
              "id": "d48ae9a2-2529-45e8-9d59-0de30ee6bb52",
              "name": "items[0].snippet.title",
              "value": "={{ $json.items[0].snippet.title }}",
              "type": "string"
            },
            {
              "id": "b3d70e35-e32b-4586-bf03-d986a19872b1",
              "name": "items[0].snippet.description",
              "value": "={{ $json.items[0].snippet.description }}",
              "type": "string"
            },
            {
              "id": "22d8d4e3-70ae-4176-8341-f183377320a9",
              "name": "items[0].contentDetails.duration",
              "value": "={{ $json.items[0].contentDetails.duration }}",
              "type": "string"
            },
            {
              "id": "fbf58e3b-7e98-4097-88a5-d9baf6cc7070",
              "name": "items[0].contentDetails.definition",
              "value": "={{ $json.items[0].contentDetails.definition }}",
              "type": "string"
            },
            {
              "id": "976eefbc-ba4d-48f9-8120-3f1c81e60596",
              "name": "items[0].contentDetails.contentRating",
              "value": "={{ $json.items[0].contentDetails.contentRating }}",
              "type": "object"
            },
            {
              "id": "19242081-4bfc-423b-a6fa-99a7dfb23a73",
              "name": "items[0].statistics",
              "value": "={{ $json.items[0].statistics }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2720,
        -600
      ],
      "id": "9fd98246-5d3d-4616-b188-41bf8a093eaf",
      "name": "Metadata"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ \"https://api.apify.com/v2/acts/topaz_sharingan~youtube-transcript-scraper-1/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m\" }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"startUrls\": [\"\"]\n}\n\n",
        "options": {}
      },
      "id": "09cfe0ab-44fc-4440-9fb0-c5c1a13d0a9b",
      "name": "Youtube Transcript",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2940,
        -600
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "=Summary\n{{ $('Summary Agent').item.json.text }}\n\nKey Points\n{{ $('Key Points Agent').item.json.text }}\n\nStatistics\nViews: {{ $('Youtube Metadata').item.json.items[0].statistics.viewCount }}\nLikes: {{ $('Youtube Metadata').item.json.items[0].statistics.likeCount }}\n\nSentiment Analysis of Commnents: \nNumber of Positive comments: {{ 5 }}\nNumber of Neutral comments: {{ 4 }} \nNumber of Negative comments: {{ 2 }} ",
        "options": {
          "response_format": "mp3"
        }
      },
      "id": "057cc906-959c-43fc-b33d-5a1caf1dd4eb",
      "name": "Text → Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        3980,
        -600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3680,
        -60
      ],
      "id": "c8e30cbd-cc8a-406c-805f-fdac1dc99b22",
      "name": "Merge"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a title: {{ $json.message.content }} and a summary: {{ $('Researcher').item.json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2620,
        1060
      ],
      "id": "5e2b1539-dae8-4cda-90eb-c320be36bfb2",
      "name": "SEO Writer Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an Editor. You'll receive a draft:\n{{ $json.message.content }} of a blog article. Your task is to thoroughly check for grammar, punctuation, and readability. Ensure that the text flows smoothly, is free from errors, and maintains a clear, engaging tone. Make any necessary adjustments to improve clarity, structure, and accessibility for a broad audience."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        3000,
        1060
      ],
      "id": "c9fd02f4-d190-4643-b48d-ecd74c1933fb",
      "name": "Editor Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.transcript }}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "={{ $('Prompts').item.json.Summary }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        3180,
        -600
      ],
      "id": "521b7b3a-e886-46d5-9ab7-626ee93584b4",
      "name": "Summary Agent",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Ptompts').item.json.Highlights }}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "={{ $('Ptompts').item.json.Highlights }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        3580,
        -600
      ],
      "id": "7771de5f-48de-407b-972e-11bcc7c18b4d",
      "name": "Key Points Agent",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "inputText": "={{ $json.comment }}",
        "options": {}
      },
      "id": "f986598c-2039-443a-8e24-2de976d82f7d",
      "name": "Comments Sentiment Analysis Agent",
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        2960,
        -60
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a Title Generator for articles and blogposts. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article title that is informative, engaging, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and keep the length under 12 words."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2240,
        1060
      ],
      "id": "51469ce9-1135-42a7-b624-1c8cc399e46b",
      "name": "Title Generator Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a Formatter. You'll receive a refined article draft: {{ $json.message.content }}. \nYour task is to format it for optimal readability and SEO impact. Use headings (H1, H2, H3) where appropriate, create short paragraphs, and add bullet points or numbered lists for clarity. Ensure each section flows logically, and highlight important information for better reader engagement. Check that keywords are strategically placed without disrupting the flow. "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        3380,
        1060
      ],
      "id": "026a61a5-f779-42c4-96dd-bf66c9f92a61",
      "name": "Formatter Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2400,
        1420
      ],
      "id": "32054070-9efa-4cb2-829c-0ff40243ef14",
      "name": "SerpAPI1",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2800,
        1420
      ],
      "id": "e6628d51-569c-4877-9f98-e3e6fb883925",
      "name": "SerpAPI2",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2800,
        1440
      ],
      "id": "bbfb4957-07c7-47e0-9067-593cde349cd7",
      "name": "Cover Picture & Charts Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1660,
        -340
      ],
      "id": "2a8d0e2d-6fdf-4a6d-9cb8-aefddf243b3f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2400,
        1440
      ],
      "id": "982ca386-2f0c-498b-b3a1-58a60f7f6320",
      "name": "Market Trend / Current News",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        3220,
        1420
      ],
      "id": "94b51b5e-a31c-40d4-9165-42526d40f336",
      "name": "SerpAPI3",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        3220,
        1440
      ],
      "id": "323a5b34-85a3-4ae9-b9d4-9dcfc4707e83",
      "name": "Knowledge Base RAG",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "content": "## Roadmap",
        "height": 80,
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2400,
        1740
      ],
      "id": "255a31fe-3495-4700-a190-cad807724301",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "",
        "height": 460,
        "width": 1200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        1380
      ],
      "id": "01bc5baf-bbca-45e8-b3ae-8784b80acfb0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "a436018c-ea67-4cf9-a6c4-5ca32a08243a",
      "name": "Podcasts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4760,
        -380
      ]
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "042b9751-ff00-49e6-947b-510da34cfd54",
      "name": "RSS Feeds",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4980,
        -380
      ]
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "9ce6fbaf-0701-48ab-8270-0344a041bf6b",
      "name": "News Letters",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5200,
        -380
      ]
    },
    {
      "parameters": {
        "content": "## Roadmap\n",
        "height": 320,
        "width": 1320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4700,
        -460
      ],
      "id": "070db2e7-d649-492b-9b34-9c1f16b25315",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        5420,
        -380
      ],
      "id": "df68332c-2186-4d7d-9992-1e96c16ee782",
      "name": "Blog"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        5720,
        -400
      ],
      "id": "409f85d7-2211-47d2-b0b9-135719fc8acd",
      "name": "Email",
      "credentials": {
        "smtp": {
          "id": "Dl8B2JzKzTKkFx5i",
          "name": "SMTP account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C085C7Q7FPY",
          "mode": "list",
          "cachedResultName": "content-generation"
        },
        "text": "awefr",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        5800,
        -340
      ],
      "id": "8e1ef7b8-f92c-4bed-8ece-dcb2f93c9a9c",
      "name": "Slack",
      "webhookId": "6dbc009e-41d1-4363-8b00-12037130eb37",
      "credentials": {
        "slackOAuth2Api": {
          "id": "7VOxhQHkBloxHtkn",
          "name": "syc-n8n"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2040,
        1320
      ],
      "id": "ef9822f5-6bc4-405a-912d-a84201df4bc4",
      "name": ".",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2800,
        1660
      ],
      "id": "bfd9ab4a-e49a-482b-b1f6-ef29fb52d6f8",
      "name": "Industry Voices",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1660,
        -980
      ],
      "id": "035d3ee7-dacb-468b-a1d5-42ed627fd453",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {},
      "id": "837ef9b8-4e4a-413e-bd83-e5bcfb87d835",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2140,
        1320
      ]
    },
    {
      "parameters": {
        "name": "Now",
        "description": "Call this tool to get the context of the time now - the date and time we are in and references to the past and the future. For example, today, up to date, last month, this week, tomorrow, and other.",
        "jsCode": "function createDateReferences() {\n    try {\n        // Utility function to safely create dates and handle invalid dates\n        function createSafeDate(...args) {\n            const date = new Date(...args);\n            if (isNaN(date.getTime())) {\n                throw new Error(`Invalid date created with args: ${JSON.stringify(args)}`);\n            }\n            return date;\n        }\n\n        const now = createSafeDate();\n        const pstOptions = { timeZone: 'America/Los_Angeles' };\n\n        // Enhanced format function with error handling\n        function formatDate(date) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid date provided to formatDate');\n                }\n                return date.toLocaleDateString('en-US', {\n                    weekday: 'long',\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric',\n                    ...pstOptions\n                });\n            } catch (error) {\n                console.error(`Error formatting date: ${error.message}`);\n                return 'Invalid Date';\n            }\n        }\n\n        // Safe date manipulation with error handling\n        function manipulateDate(date, manipulation) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid base date for manipulation');\n                }\n                const newDate = createSafeDate(date);\n                manipulation(newDate);\n                if (isNaN(newDate.getTime())) {\n                    throw new Error('Date manipulation resulted in invalid date');\n                }\n                return newDate;\n            } catch (error) {\n                console.error(`Date manipulation error: ${error.message}`);\n                return createSafeDate(); // Return current date as fallback\n            }\n        }\n\n        // Handle month transitions safely\n        function getMonthBoundaries(yearOffset = 0, monthOffset = 0) {\n            try {\n                const year = now.getFullYear() + yearOffset;\n                const month = now.getMonth() + monthOffset;\n                \n                // Normalize month and year if we overflow\n                const normalizedYear = year + Math.floor(month / 12);\n                const normalizedMonth = ((month % 12) + 12) % 12; // Handle negative months\n\n                const start = createSafeDate(normalizedYear, normalizedMonth, 1);\n                const end = createSafeDate(normalizedYear, normalizedMonth + 1, 0);\n                \n                return { start, end };\n            } catch (error) {\n                console.error(`Error calculating month boundaries: ${error.message}`);\n                return {\n                    start: createSafeDate(),\n                    end: createSafeDate()\n                };\n            }\n        }\n\n        // Get week boundaries with error handling for DST transitions\n        function getWeekBoundaries(weekOffset = 0) {\n            try {\n                const startOfWeek = manipulateDate(now, d => {\n                    d.setDate(d.getDate() - d.getDay() + (weekOffset * 7));\n                    d.setHours(0, 0, 0, 0);\n                });\n\n                const endOfWeek = manipulateDate(startOfWeek, d => {\n                    d.setDate(d.getDate() + 6);\n                    d.setHours(23, 59, 59, 999);\n                });\n\n                return { start: startOfWeek, end: endOfWeek };\n            } catch (error) {\n                console.error(`Error calculating week boundaries: ${error.message}`);\n                return {\n                    start: createSafeDate(),\n                    end: createSafeDate()\n                };\n            }\n        }\n\n        // Safe time formatting with DST handling\n        function formatTime(date) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid date provided to formatTime');\n                }\n                return date.toLocaleTimeString('en-US', {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                    hour12: true,\n                    ...pstOptions\n                });\n            } catch (error) {\n                console.error(`Error formatting time: ${error.message}`);\n                return 'Invalid Time';\n            }\n        }\n\n        // Determine timezone with error handling\n        function getTimezoneIndicator() {\n            try {\n                const pstDate = new Date().toLocaleString('en-US', pstOptions);\n                return pstDate.includes('PDT') ? 'PDT' : 'PST';\n            } catch (error) {\n                console.error(`Error determining timezone: ${error.message}`);\n                return 'PST'; // Default to PST if there's an error\n            }\n        }\n\n        const thisWeek = getWeekBoundaries(0);\n        const lastWeek = getWeekBoundaries(-1);\n        const nextWeek = getWeekBoundaries(1);\n\n        const thisMonth = getMonthBoundaries(0, 0);\n        const lastMonth = getMonthBoundaries(0, -1);\n        const nextMonth = getMonthBoundaries(0, 1);\n\n        const thisYear = {\n            start: createSafeDate(now.getFullYear(), 0, 1),\n            end: createSafeDate(now.getFullYear(), 11, 31)\n        };\n        const lastYear = {\n            start: createSafeDate(now.getFullYear() - 1, 0, 1),\n            end: createSafeDate(now.getFullYear() - 1, 11, 31)\n        };\n        const nextYear = {\n            start: createSafeDate(now.getFullYear() + 1, 0, 1),\n            end: createSafeDate(now.getFullYear() + 1, 11, 31)\n        };\n\n        const formattedTime = formatTime(now);\n        const timezoneIndicator = getTimezoneIndicator();\n\n        return {\n            json: {\n                current: {\n                    dateTime: `${formatDate(now)} at ${formattedTime} ${timezoneIndicator}`,\n                    date: formatDate(now),\n                    time: `${formattedTime} ${timezoneIndicator}`,\n                    timezone: timezoneIndicator,\n                    timestamp: now.getTime() // Include timestamp for additional reference\n                },\n                relative: {\n                    yesterday: formatDate(manipulateDate(now, d => d.setDate(d.getDate() - 1))),\n                    today: formatDate(now),\n                    tomorrow: formatDate(manipulateDate(now, d => d.setDate(d.getDate() + 1)))\n                },\n                weeks: {\n                    thisWeek: {\n                        start: formatDate(thisWeek.start),\n                        end: formatDate(thisWeek.end)\n                    },\n                    lastWeek: {\n                        start: formatDate(lastWeek.start),\n                        end: formatDate(lastWeek.end)\n                    },\n                    nextWeek: {\n                        start: formatDate(nextWeek.start),\n                        end: formatDate(nextWeek.end)\n                    }\n                },\n                months: {\n                    thisMonth: {\n                        start: formatDate(thisMonth.start),\n                        end: formatDate(thisMonth.end)\n                    },\n                    lastMonth: {\n                        start: formatDate(lastMonth.start),\n                        end: formatDate(lastMonth.end)\n                    },\n                    nextMonth: {\n                        start: formatDate(nextMonth.start),\n                        end: formatDate(nextMonth.end)\n                    }\n                },\n                years: {\n                    thisYear: {\n                        start: formatDate(thisYear.start),\n                        end: formatDate(thisYear.end)\n                    },\n                    lastYear: {\n                        start: formatDate(lastYear.start),\n                        end: formatDate(lastYear.end)\n                    },\n                    nextYear: {\n                        start: formatDate(nextYear.start),\n                        end: formatDate(nextYear.end)\n                    }\n                }\n            }\n        };\n    } catch (error) {\n        // Global error handler\n        console.error('Critical error in date reference creation:', error);\n        // Return a minimal valid response with current date/time\n        const fallbackDate = new Date();\n        return {\n            json: {\n                error: true,\n                errorMessage: error.message,\n                current: {\n                    dateTime: fallbackDate.toISOString(),\n                    date: fallbackDate.toDateString(),\n                    time: fallbackDate.toTimeString(),\n                    timezone: 'PST'\n                }\n            }\n        };\n    }\n}\n\nreturn JSON.stringify(createDateReferences());"
      },
      "id": "5d42936d-8445-4c95-b7dd-4a4b882f0797",
      "name": "Now",
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        1940,
        1320
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1720,
        1320
      ],
      "id": "25b8fe22-75ce-46c3-97b7-a9c484f843cb",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6de5eab2-bc17-4a24-aa4a-704058cb46db",
              "name": "Source",
              "value": "={{ $json.Source }}",
              "type": "string"
            },
            {
              "id": "c7e16f00-1bca-4536-b33b-5efaa5326505",
              "name": "SourceType",
              "value": "={{ $json.SourceType }}",
              "type": "string"
            },
            {
              "id": "54b8e27c-5a91-4060-860f-7d5b1bc32c04",
              "name": "URL",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        -1100
      ],
      "id": "b11a639e-1b15-49e3-bb1a-9b38aeb4c35b",
      "name": "To Process"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e22ea465-92e5-4eb3-bd45-3ba45dd8bab8",
              "leftValue": "={{ $json.Process }}",
              "rightValue": "TRUE",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2100,
        -980
      ],
      "id": "844bee5c-766a-4edc-9f3e-1828df25db79",
      "name": "to Process",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"dateFilter\": \"year\",\n    \"downloadSubtitles\": false,\n    \"hasCC\": false,\n    \"hasLocation\": false,\n    \"hasSubtitles\": false,\n    \"is360\": false,\n    \"is3D\": false,\n    \"is4K\": false,\n    \"isBought\": false,\n    \"isHD\": false,\n    \"isHDR\": false,\n    \"isLive\": false,\n    \"isVR180\": false,\n    \"maxResultStreams\": 0,\n    \"maxResults\": 100,\n    \"maxResultsShorts\": 0,\n    \"oldestPostDate\": \"2024-01-01\",\n    \"preferAutoGeneratedSubtitles\": false,\n    \"saveSubsToKVS\": false,\n    \"startUrls\": [\n        {\n            \"url\": \"{{ $json.URL }}\",\n            \"method\": \"POST\"\n        }\n    ],\n    \"subtitlesLanguage\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        -1100
      ],
      "id": "1b8801ff-5dc4-483f-b568-a9f03f965900",
      "name": "APIfy_YT_Scrap",
      "alwaysOutputData": true,
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c64b4b44-ad44-4b2a-a981-676cd3fb2b11",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "c7638328-03a1-4da4-8157-8cbfd046362d",
              "name": "type",
              "value": "={{ $json.type }}",
              "type": "string"
            },
            {
              "id": "43a3f593-4ad9-4a1a-a597-eddf5ec329dd",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "09bcc045-7426-48ad-983c-6ae4cd373b6e",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "67dabedf-6af7-487d-82cc-cd89e1842fdb",
              "name": "thumbnailUrl",
              "value": "={{ $json.thumbnailUrl }}",
              "type": "string"
            },
            {
              "id": "814bc874-57fa-4844-9b62-1d1a4a0d2ff4",
              "name": "viewCount",
              "value": "={{ $json.viewCount }}",
              "type": "number"
            },
            {
              "id": "0f8117a1-5e3a-46b3-942b-65c2ac10c1f0",
              "name": "date",
              "value": "={{ $json.date }}",
              "type": "string"
            },
            {
              "id": "107c3d01-0a3e-40a4-afb6-c01d330cadca",
              "name": "likes",
              "value": "={{ $json.likes }}",
              "type": "number"
            },
            {
              "id": "e06498be-f809-4d87-9c33-30c63f873223",
              "name": "location",
              "value": "={{ $json.location }}",
              "type": "string"
            },
            {
              "id": "277f12b5-3f21-449c-8c16-1685720bb180",
              "name": "channelName",
              "value": "={{ $json.channelName }}",
              "type": "string"
            },
            {
              "id": "14c8ee06-f570-4912-83b8-0cf352a4b49f",
              "name": "channelId",
              "value": "={{ $json.channelId }}",
              "type": "string"
            },
            {
              "id": "ed1aff4e-422f-4f72-a788-ad9964159afc",
              "name": "channelUsername",
              "value": "={{ $json.channelUsername }}",
              "type": "string"
            },
            {
              "id": "6a5d055d-de84-463b-8943-f3a64581875b",
              "name": "channelDescription",
              "value": "={{ $json.channelDescription }}",
              "type": "string"
            },
            {
              "id": "3e3f63d5-8b8d-48c2-9b60-c2be47c41ede",
              "name": "channelJoinedDate",
              "value": "={{ $json.channelJoinedDate }}",
              "type": "string"
            },
            {
              "id": "cec912eb-5719-4e6c-b287-49b675f88fed",
              "name": "channelDescriptionLinks",
              "value": "={{ $json.channelDescriptionLinks }}",
              "type": "array"
            },
            {
              "id": "e472e1b3-f385-4302-ae35-444ac637af91",
              "name": "channelLocation",
              "value": "={{ $json.channelLocation }}",
              "type": "string"
            },
            {
              "id": "71569961-ea92-4de6-b85d-6e36ae0f8394",
              "name": "channelAvatarUrl",
              "value": "={{ $json.channelAvatarUrl }}",
              "type": "string"
            },
            {
              "id": "9764407d-4e64-4d14-9e22-926d4c16ee41",
              "name": "channelBannerUrl",
              "value": "={{ $json.channelBannerUrl }}",
              "type": "string"
            },
            {
              "id": "402a7b3f-93e5-4d7b-b744-3d2dcc533396",
              "name": "channelTotalVideos",
              "value": "={{ $json.channelTotalVideos }}",
              "type": "number"
            },
            {
              "id": "3c95c8ec-201d-46f2-8e2f-77b5ce2be5bd",
              "name": "channelTotalViews",
              "value": "={{ $json.channelTotalViews }}",
              "type": "number"
            },
            {
              "id": "25137089-dd66-4a99-a193-089284091cdc",
              "name": "numberOfSubscribers",
              "value": "={{ $json.numberOfSubscribers }}",
              "type": "number"
            },
            {
              "id": "f43a07ae-af0b-452e-978f-603d5054f0d8",
              "name": "isChannelVerified",
              "value": "={{ $json.isChannelVerified }}",
              "type": "boolean"
            },
            {
              "id": "1b4a3024-8154-4f02-9415-e0bb55594b64",
              "name": "inputChannelUrl",
              "value": "={{ $json.inputChannelUrl }}",
              "type": "string"
            },
            {
              "id": "51897024-7627-42ad-a3da-9d867c169851",
              "name": "isAgeRestricted",
              "value": "={{ $json.isAgeRestricted }}",
              "type": "boolean"
            },
            {
              "id": "6c479cb6-40bc-4901-80dc-9aa11160fb1b",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "string"
            },
            {
              "id": "09dc0dea-20af-4aa4-b000-30ce51a8fc84",
              "name": "commentsCount",
              "value": "={{ $json.commentsCount }}",
              "type": "number"
            },
            {
              "id": "5b86b5f6-0505-4f44-9483-0f3da5f0f142",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "71651238-0a47-4d59-b824-3674141242c7",
              "name": "subtitles",
              "value": "={{ $json.subtitles }}",
              "type": "string"
            },
            {
              "id": "de440a72-3bda-4464-94ab-1e81c4d072fd",
              "name": "commentsTurnedOff",
              "value": "={{ $json.commentsTurnedOff }}",
              "type": "boolean"
            },
            {
              "id": "7a3fdd9f-99b6-4777-8b2a-aa141d41d596",
              "name": "comments",
              "value": "={{ $json.comments }}",
              "type": "string"
            },
            {
              "id": "a5dc0077-4f16-4587-8314-b311412ad76e",
              "name": "fromYTUrl",
              "value": "={{ $json.fromYTUrl }}",
              "type": "string"
            },
            {
              "id": "de2d962c-e74a-461d-bf41-b0316e9b43fb",
              "name": "isMonetized",
              "value": "={{ $json.isMonetized }}",
              "type": "string"
            },
            {
              "id": "b1ab1fb9-de2b-4ac1-97bd-344c15395e24",
              "name": "hashtags",
              "value": "={{ $json.hashtags }}",
              "type": "array"
            },
            {
              "id": "81590c57-4aca-4144-8b73-321075a1e61c",
              "name": "formats",
              "value": "={{ $json.formats }}",
              "type": "array"
            },
            {
              "id": "782c7e19-0154-4a4c-8526-5dd308a9b9dc",
              "name": "input",
              "value": "={{ $json.input }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2940,
        -1100
      ],
      "id": "88de8156-0092-49bd-81be-d7cda55529a2",
      "name": "Channel Videos"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblmB1yGomABObnxm",
          "mode": "list",
          "cachedResultName": "Channels",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblmB1yGomABObnxm"
        },
        "filterByFormula": "{Process} = 'true'",
        "options": {
          "view": {
            "mode": "list",
            "value": ""
          }
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1880,
        -980
      ],
      "id": "361d365f-6371-4343-b505-e9ee97e665db",
      "name": "Airtable",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "formTitle": "Create an Article",
        "formDescription": "Give me a topic to write an article on.",
        "formFields": {
          "values": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        3700,
        1300
      ],
      "id": "71c2a1d2-d9ca-4d4f-86ac-1df3f5e405a6",
      "name": "On form submission",
      "webhookId": "09ee0189-f457-4993-b5f5-c35c64e14bd7",
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "video_results",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -440,
        -1000
      ],
      "id": "04dd0400-64d0-44c3-90da-229e1a37cd47",
      "name": "Split each",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8",
          "mode": "list",
          "cachedResultName": "Blue&: Content Generation Platform",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 221143269,
          "mode": "list",
          "cachedResultName": "Content Input",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit#gid=221143269"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Description": "=",
            "Date_Processed": "={{ $now }}",
            "Date_Published": "={{ $('Videos').item.json.published_date }}",
            "Link to Source": "={{ $('Videos').item.json.link }}",
            "Title": "={{ $('Videos').item.json.title }}",
            "Views": "={{ $('Videos').item.json.views }}",
            "Length": "={{ $('Videos').item.json.length }}"
          },
          "matchingColumns": [
            "Link to Source"
          ],
          "schema": [
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date_Processed",
              "displayName": "Date_Processed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date_Published",
              "displayName": "Date_Published",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Link to Source",
              "displayName": "Link to Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Views",
              "displayName": "Views",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Length",
              "displayName": "Length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Highlights",
              "displayName": "Highlights",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sentiment",
              "displayName": "Sentiment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        300,
        -1020
      ],
      "id": "37f24522-91ec-4c7d-a1ee-733f1ab7b095",
      "name": "Videos1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "psz4VI4aPHfgtBvc",
          "name": "Google Sheets account 6"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ \"https://serpapi.com/search.json\" }}\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"engine\": \"youtube\",\n    \"search_query\": \"{{ $json.Handle }}\",\n    \"api_key\": \"979f843b8d4d78365ccdb42501e70c6d12c848bce8e63bdbf0c04d8452e491c1\",\n    \"type\": \"channel\",\n    \"gl\": \"US\",\n    \"hl\": \"en\"\n}\n\n",
        "options": {
          "lowercaseHeaders": true,
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        -1180
      ],
      "id": "1eca8530-9592-4793-aaac-77596181008f",
      "name": "Serp YT Search",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e574e45-5a6a-4f14-a613-b8d591f49320",
              "leftValue": "={{ $json.channel.name }}",
              "rightValue": "={{ $('To Process').item.json.Handle }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        20,
        -1000
      ],
      "id": "c1153d81-3bf8-4b00-a9bb-db68e3a3e067",
      "name": "Video from Channel",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87800aa6-3d16-4d92-81bd-d59b0653ab09",
              "name": "position_on_page",
              "value": "={{ $json.video_results.position_on_page }}",
              "type": "number"
            },
            {
              "id": "3e7d19d7-98e3-4a0a-88d1-1952f770e425",
              "name": "channel.name",
              "value": "={{ $json.video_results.channel.name }}",
              "type": "string"
            },
            {
              "id": "e8f18b66-f71b-410a-a2d7-f2341b471a3b",
              "name": "title",
              "value": "={{ $json.video_results.title }}",
              "type": "string"
            },
            {
              "id": "a3ee45c5-05b5-48e6-a137-368f323f9294",
              "name": "link",
              "value": "={{ $json.video_results.link }}",
              "type": "string"
            },
            {
              "id": "fc8c7654-cd78-441b-befe-055cb68ef2b8",
              "name": "published_date",
              "value": "={{ $json.video_results.published_date }}",
              "type": "string"
            },
            {
              "id": "c7925e03-6b84-4396-a000-c12941e1dfeb",
              "name": "views",
              "value": "={{ $json.video_results.views }}",
              "type": "number"
            },
            {
              "id": "537b67b1-b51b-4df7-b547-4bbf27ef6d78",
              "name": "length",
              "value": "={{ $json.video_results.length }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        -1000
      ],
      "id": "caf384e3-7201-4169-be2d-23b1f496bf6d",
      "name": "Videos",
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "=video_results",
        "include": "selectedOtherFields",
        "fieldsToInclude": "video_results",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -680,
        -1000
      ],
      "id": "55173065-4c30-44f0-8284-67e9a3acfb60",
      "name": "SplitVideos",
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "channel_results",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -680,
        -1180
      ],
      "id": "67288813-3952-4676-9922-c729accde1d6",
      "name": "Split Channel",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8",
          "mode": "list",
          "cachedResultName": "Blue&: Content Generation Platform",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 194808887,
          "mode": "list",
          "cachedResultName": "Source",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit#gid=194808887"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribers": "={{ $json.subscribers }}",
            "Description": "={{ $json.description }}",
            "Handle": "={{ $json.handle }}",
            "Channel_ID": "={{ $json.link }}",
            "Type": "youtube#video"
          },
          "matchingColumns": [
            "Handle"
          ],
          "schema": [
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Handle",
              "displayName": "Handle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Channel_ID",
              "displayName": "Channel_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subscribers",
              "displayName": "Subscribers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -440,
        -1180
      ],
      "id": "c144a4da-f69d-443a-b642-94dd95bb62cc",
      "name": "Channel",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "psz4VI4aPHfgtBvc",
          "name": "Google Sheets account 6"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        460,
        -1160
      ],
      "id": "1efd6c1c-301d-4bd4-b1f4-cb83c8c2af86",
      "name": "Merge1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "filterByFormula": "{Process}='true'",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1880,
        -340
      ],
      "id": "d52ccc01-cee7-4b3d-a052-19e7f35dc6e2",
      "name": "Videos2process",
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Get the counts from input items\nconst positive = $('Positive').first().json.count_sentimentAnalysis;\nconst negative = $('Negative').first().json.count_sentimentAnalysis; \nconst neutral = $('Neutral').first().json.count_sentimentAnalysis;\n\n// Calculate total comments\nconst total_comments = positive + neutral + negative;\n  \nconst percentPositive = (positive / total_comments) * 100;\nconst percentNegative = (negative / total_comments) * 100;\nconst snps = (percentPositive - percentNegative).toFixed(2);\n\nreturn {\n  json: {\n    snps: snps,\n    details: {\n      positive_percent: percentPositive.toFixed(2) + '%',\n      negative_percent: percentNegative.toFixed(2) + '%',\n      total_comments: total_comments\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        -60
      ],
      "id": "49ae1488-128a-45e1-a8f9-917d8f0fd08b",
      "name": "sNPS"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8",
          "mode": "list",
          "cachedResultName": "Blue&: Content Generation Platform",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1471096355,
          "mode": "list",
          "cachedResultName": "prompts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit#gid=1471096355"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2100,
        -340
      ],
      "id": "95f21e14-cf03-4f61-9458-e45b1db84a80",
      "name": "Prompts2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rSTr7Ltjwpw9Xvz2",
          "name": "Google Sheets account 5"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblmB1yGomABObnxm",
          "mode": "list",
          "cachedResultName": "Channels",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblmB1yGomABObnxm"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ $json.url }}",
            "id": "=",
            "Source": "CarOffer",
            "SourceType": "={{\"youtube#video\"}}",
            "Process_Date": "={{ $now }}",
            "title": "={{ $json.title }}",
            "thumbnailUrl": "={{ $json.viewCount }}",
            "viewCount": "={{ $json.viewCount }}",
            "date": "={{ $json.date }}",
            "likes": "={{ $json.likes }}",
            "location": "={{ $json.location }}",
            "channelName": "={{ $json.channelName }}",
            "channelAvatarUrl": "={{ $json.channelAvatarUrl }}",
            "channelUsername": "={{ $json.channelUsername }}",
            "channelDescription": "={{ $json.channelDescription }}",
            "channelJoinedDate": "={{ $json.channelJoinedDate }}",
            "channelDescriptionLinks": "={{ $json.channelDescription }}",
            "channelBannerUrl": "={{ $json.channelBannerUrl }}",
            "channelTotalVideos": "={{ $json.channelTotalVideos }}",
            "channelTotalViews": "={{ $json.channelTotalViews }}",
            "isChannelVerified": "={{ $json.isChannelVerified }}",
            "inputChannelUrl": "={{ $json.inputChannelUrl }}",
            "isAgeRestricted": "={{ $json.isAgeRestricted }}",
            "duration": "={{ $json.duration }}",
            "commentsCount": "={{ $json.commentsCount }}",
            "text": "={{ $json.text }}",
            "subtitles": "={{ $json.subtitles }}",
            "commentsTurnedOff": "={{ $json.commentsTurnedOff }}",
            "comments": "={{ $json.comments }}",
            "fromYTUrl": "={{ $json.fromYTUrl }}",
            "isMonetized": "={{ $json.isMonetized }}",
            "hashtags": "={{ $json.hashtags }}",
            "formats": "={{ $json.formats }}",
            "input": "={{ $json.input }}",
            "numberOfSubscribers": "={{ $json.numberOfSubscribers }}",
            "channelLocation": "={{ $json.channelLocation }}",
            "channelId": "={{ $json.channelId }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Process_Date",
              "displayName": "Process_Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Carvana",
                  "value": "Carvana"
                },
                {
                  "name": "CarOffer",
                  "value": "CarOffer"
                },
                {
                  "name": "Accu-trade",
                  "value": "Accu-trade"
                },
                {
                  "name": "Car Dealership Guy",
                  "value": "Car Dealership Guy"
                },
                {
                  "name": "Automotive Ventures",
                  "value": "Automotive Ventures"
                },
                {
                  "name": "KBB",
                  "value": "KBB"
                },
                {
                  "name": "PrivateAuto",
                  "value": "PrivateAuto"
                },
                {
                  "name": "AutolineNetwork",
                  "value": "AutolineNetwork"
                },
                {
                  "name": "Ernie Garcia",
                  "value": "Ernie Garcia"
                },
                {
                  "name": "Bruce Thompson",
                  "value": "Bruce Thompson"
                },
                {
                  "name": "Robert Hollenshead",
                  "value": "Robert Hollenshead"
                },
                {
                  "name": "Yossi J Levi",
                  "value": "Yossi J Levi"
                },
                {
                  "name": "Steve Greenfield",
                  "value": "Steve Greenfield"
                },
                {
                  "name": "Steve Lind",
                  "value": "Steve Lind"
                },
                {
                  "name": "Brad Parker",
                  "value": "Brad Parker"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "SourceType",
              "displayName": "SourceType",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "youtube#video",
                  "value": "youtube#video"
                },
                {
                  "name": "youtube",
                  "value": "youtube"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                },
                {
                  "name": "Podcast",
                  "value": "Podcast"
                },
                {
                  "name": "RSS",
                  "value": "RSS"
                },
                {
                  "name": "persona",
                  "value": "persona"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "likes",
              "displayName": "likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelUrl",
              "displayName": "channelUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelId",
              "displayName": "channelId",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelUsername",
              "displayName": "channelUsername",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelDescription",
              "displayName": "channelDescription",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelJoinedDate",
              "displayName": "channelJoinedDate",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelDescriptionLinks",
              "displayName": "channelDescriptionLinks",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelLocation",
              "displayName": "channelLocation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelAvatarUrl",
              "displayName": "channelAvatarUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelBannerUrl",
              "displayName": "channelBannerUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelTotalVideos",
              "displayName": "channelTotalVideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelTotalViews",
              "displayName": "channelTotalViews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isChannelVerified",
              "displayName": "isChannelVerified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "inputChannelUrl",
              "displayName": "inputChannelUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isAgeRestricted",
              "displayName": "isAgeRestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "commentsCount",
              "displayName": "commentsCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "subtitles",
              "displayName": "subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "commentsTurnedOff",
              "displayName": "commentsTurnedOff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "fromYTUrl",
              "displayName": "fromYTUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isMonetized",
              "displayName": "isMonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "hashtags",
              "displayName": "hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "formats",
              "displayName": "formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "input",
              "displayName": "input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "descriptionLinks",
              "displayName": "descriptionLinks",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3160,
        -1100
      ],
      "id": "321633e3-ec08-48a2-a3de-c67f5115960b",
      "name": "Channel Content",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "authentication": "airtableOAuth2Api",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "Title": "={{ $json.title }}",
            "Type": "={{ $json.type }}",
            "Id": "={{ $json.id }}",
            "Viewcount": "={{ $json.viewCount }}",
            "Thumbnailurl": "={{ $json.thumbnailUrl }}",
            "Url": "={{ $json.url }}",
            "Channelname": "={{ $json.channelName }}",
            "Location": "={{ $json.location }}",
            "Likes": "={{ $json.likes }}",
            "Date": "={{ $json.date }}",
            "Input": "={{ $json.input }}",
            "Formats": "={{ JSON.stringify($json[\"formats\"][0]).replace(/[{}]/g, '') }}",
            "Hashtags": "={{JSON.stringify($json[\"hashtags\"]).replace(/[{}]/g,'') }}",
            "Ismonetized": "={{ $json.isMonetized }}",
            "Fromyturl": "={{ $json.fromYTUrl }}",
            "Comments": "={{ $json.comments }}",
            "Commentsturnedoff": "={{ $json.commentsTurnedOff.toString() }}",
            "Subtitles": "={{ $json.subtitles }}",
            "Text": "={{ $json.text }}",
            "Duration": "={{ $json.duration }}",
            "Isagerestricted": "={{ $json.isAgeRestricted.toString() }}",
            "Inputchannelurl": "={{ $json.inputChannelUrl }}",
            "Ischannelverified": "={{ $json.isChannelVerified.toString() }}",
            "Numberofsubscribers": "={{ $json.numberOfSubscribers }}",
            "Channeltotalviews": "={{ $json.channelTotalViews }}",
            "Channeltotalvideos": "={{ $json.channelTotalVideos }}",
            "Description": "={{ $('APIfy_YT_Scrap').item.json.text }}",
            "Process": "=",
            "Date_from_channel": "={{ $json.date }}",
            "Date_processed": "={{$now}}",
            "Channels": "={{ $json.channelUrl }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_from_channel",
              "displayName": "Date_from_channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_processed",
              "displayName": "Date_processed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channels",
              "displayName": "Channels",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Handle (from Channels)",
              "displayName": "Handle (from Channels)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Highlights",
              "displayName": "Highlights",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Url",
              "displayName": "Url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Thumbnailurl",
              "displayName": "Thumbnailurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Viewcount",
              "displayName": "Viewcount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channelname",
              "displayName": "Channelname",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalvideos",
              "displayName": "Channeltotalvideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalviews",
              "displayName": "Channeltotalviews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Numberofsubscribers",
              "displayName": "Numberofsubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ischannelverified",
              "displayName": "Ischannelverified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Inputchannelurl",
              "displayName": "Inputchannelurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Isagerestricted",
              "displayName": "Isagerestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Subtitles",
              "displayName": "Subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Commentsturnedoff",
              "displayName": "Commentsturnedoff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Comments",
              "displayName": "Comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Fromyturl",
              "displayName": "Fromyturl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ismonetized",
              "displayName": "Ismonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Formats",
              "displayName": "Formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": false
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3720,
        -1340
      ],
      "id": "37955fea-309a-438e-8d4e-772b4c90b3ad",
      "name": "Channel Content tmp",
      "credentials": {
        "airtableOAuth2Api": {
          "id": "LDzy6MU6xGIUvyoG",
          "name": "Airtable OAuth ✔️️"
        }
      }
    }
  ],
  "pinData": {
    "Merge": [
      {
        "json": {
          "count_sentimentAnalysis": 182
        }
      },
      {
        "json": {
          "count_sentimentAnalysis": 132
        }
      },
      {
        "json": {
          "count_sentimentAnalysis": 38
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-29T07:26:09.000Z",
  "versionId": "2728b9f8-d922-4630-bd23-e28d209df085"
}