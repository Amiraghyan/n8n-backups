{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Researcher",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "article": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text → Audio1": {
      "main": [
        []
      ]
    },
    "Google Drive": {
      "main": [
        []
      ]
    },
    "Researcher": {
      "main": [
        [
          {
            "node": "Title Generator Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Knowledge Base": {
      "main": [
        [
          {
            "node": "SEO Writer Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Researcher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comments": {
      "main": [
        [
          {
            "node": "If zero comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Comments Sentiment Analysis Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Write_Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Positive": {
      "main": [
        [
          {
            "node": "positive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Neutral": {
      "main": [
        [
          {
            "node": "neutral",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Negative": {
      "main": [
        [
          {
            "node": "negative",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Transcript": {
      "main": [
        [
          {
            "node": "Summary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text → Audio": {
      "main": [
        []
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "sNPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEO Writer Agent": {
      "main": [
        [
          {
            "node": "Editor Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editor Agent": {
      "main": [
        [
          {
            "node": "Formatter Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summary Agent": {
      "main": [
        [
          {
            "node": "Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comments Sentiment Analysis Agent": {
      "main": [
        [
          {
            "node": "Positive",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Neutral",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Negative",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Title Generator Agent": {
      "main": [
        [
          {
            "node": "SEO Writer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatter Agent": {
      "main": [
        [
          {
            "node": "article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI1": {
      "ai_tool": [
        []
      ]
    },
    "SerpAPI2": {
      "ai_tool": [
        []
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI3": {
      "ai_tool": [
        []
      ]
    },
    ".": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Read_Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Now": {
      "ai_tool": [
        [
          {
            "node": "Researcher",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Researcher",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "To Process": {
      "main": [
        [
          {
            "node": "APIfy_YT_Scrap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "to Process": {
      "main": [
        [
          {
            "node": "To Process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "APIfy_YT_Scrap": {
      "main": [
        [
          {
            "node": "Channel Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Videos": {
      "main": [
        [
          {
            "node": "Write Channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sNPS": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prompts2": {
      "main": [
        []
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Text → Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI 0": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenAI 2": {
      "ai_languageModel": [
        []
      ]
    },
    "Schedule Trigger3": {
      "main": [
        []
      ]
    },
    "OpenAI ": {
      "ai_languageModel": [
        []
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Update_Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "Read_Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read_Videos": {
      "main": [
        [
          {
            "node": "Process_video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read_Channels": {
      "main": [
        [
          {
            "node": "to Process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Channels": {
      "main": [
        [
          {
            "node": "Write_Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update_Videos": {
      "main": [
        [
          {
            "node": "Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summary Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Comments Sentiment Analysis Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Sentiment Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "positive": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "neutral": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "negative": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Sentiment Stats": {
      "main": [
        [
          {
            "node": "html_document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "html_document": {
      "main": [
        [
          {
            "node": "html_summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "html_summary": {
      "main": [
        [
          {
            "node": "html_summary_audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger Every Monday, @ 08:00am": {
      "main": [
        [
          {
            "node": "Topic for Google search",
            "type": "main",
            "index": 0
          },
          {
            "node": "Past Contributions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Past Contributions": {
      "main": [
        [
          {
            "node": "Merge Data (Keep New)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Topic for Google search": {
      "main": [
        [
          {
            "node": "LIN Advice articles (Google search)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LIN Advice articles (Google search)": {
      "main": [
        [
          {
            "node": "Extract Article links (LIN Advice articles)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Article links (LIN Advice articles)": {
      "main": [
        [
          {
            "node": "Split Out All Links (LinkedIn Advice articles)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out All Links (LinkedIn Advice articles)": {
      "main": [
        [
          {
            "node": "Merge Data (Keep New)",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Data (Keep New)": {
      "main": [
        [
          {
            "node": "HTTP Request (LIN Advice)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (LIN Advice)": {
      "main": [
        [
          {
            "node": "HTML Extract LIN Article & other users contributions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML Extract LIN Article & other users contributions": {
      "main": [
        [
          {
            "node": "LIN Contribution Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LIN Contribution Writer": {
      "main": [
        [
          {
            "node": "Post LIN Article contributions [Slack]",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post LIN Article contributions [Slack]": {
      "main": [
        [
          {
            "node": "Post LIN Contribution [Airtable]",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger4": {
      "main": [
        []
      ]
    },
    "to Process1": {
      "main": [
        []
      ]
    },
    "Read_Comments": {
      "main": [
        [
          {
            "node": "to Process1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process_video": {
      "main": [
        [
          {
            "node": "Youtube Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classifier": {
      "main": [
        [],
        [],
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "If zero comments": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "html_summary_audio": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-19T09:12:19.494Z",
  "id": "asWSVRBH37s7ulez",
  "meta": null,
  "name": "AAA YT: Content Gen",
  "nodes": [
    {
      "parameters": {},
      "id": "0dece2d8-8301-499e-8d84-7005f0f89454",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1900,
        -840
      ]
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -580,
        3140
      ],
      "id": "eaad669b-e18a-4c3e-b15a-00905a356c4c",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $('Formatter Agent').item.json.message.content }}",
        "name": "=Article_{{ $now }}-{{ $json.Title }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "https://drive.google.com/drive/u/3/folders/13UmSvnHS93koswjnxKh0FhomXy49q3aO",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1560,
        2880
      ],
      "id": "d53ff90f-de2f-4200-8e2b-178e3308ee96",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "HR5Tk4YDcaNJda9N",
          "name": "Google Drive Sergio"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a0297ea-5830-47b6-888b-e832a65b594a",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "54356597-da80-45e4-a073-91d293cb0796",
              "name": "Research",
              "value": "={{ $('Researcher').item.json.output }}",
              "type": "string"
            },
            {
              "id": "328a4bbb-ee0c-4754-b731-249c7d6578f3",
              "name": "SEOwriteup",
              "value": "={{ $('SEO Writer Agent').item.json.message.content }}",
              "type": "string"
            },
            {
              "id": "dec9bb57-2935-46bb-ba87-71d99db09848",
              "name": "Edited",
              "value": "={{ $('Editor Agent').item.json.message.content }}",
              "type": "string"
            },
            {
              "id": "03fcc827-01c0-45a7-ab68-e4ca64a01791",
              "name": "Formatted",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "11e7f038-ccb9-4e56-93cd-cd6b5ddc2ec8",
              "name": "Title",
              "value": "={{ $('Title Generator Agent').item.json.message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1340,
        2880
      ],
      "id": "45f9a1c3-95ba-415d-bfa1-e96853a443e7",
      "name": "article"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $('Formatter Agent').item.json.message.content }}",
        "options": {
          "response_format": "mp3",
          "binaryPropertyOutput": "audio"
        }
      },
      "id": "64448d70-af73-4429-9651-8ecd247b0dd3",
      "name": "Text → Audio1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1560,
        3100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "=Today is: {{ $now }}\nYou are a web searcher agent assistant. You will be provided a topic or headline for an SEO blog article. Your task is to search the web for up to date and reliable factual information on this topic and summarize key points to provide helpful content. Be concise and clear, focusing on details that would enhance the article's SEO value and informative quality. \nPost should include a captivating and thought-provoking description. Description should be engaging and useful. \nRandomize the overall post so that you don't create same post every time. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -560,
        2880
      ],
      "id": "6204594e-a241-4aa0-acb9-418d3744c397",
      "name": "Researcher"
    },
    {
      "parameters": {
        "inputDataFieldName": "={{\"data\"}}",
        "name": "=yt_audiosumm-{{ $('Youtube Transcript').item.json.videoTitle }}.mp3",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1dFgXwWbG6-uj8iRKqUHKerkq0RW1bso_",
          "mode": "list",
          "cachedResultName": "KB",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1dFgXwWbG6-uj8iRKqUHKerkq0RW1bso_"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        180,
        2500
      ],
      "id": "0df0a11b-2d85-4f38-8d10-fffe20e73e4f",
      "name": "Knowledge Base",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "HR5Tk4YDcaNJda9N",
          "name": "Google Drive Sergio"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/acts/insight_api_labs~youtube-comments-1-month---reliable-efficient/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_urls\": [\n    {\n      \"url\": \"{{ $('Read_Videos').item.json.Video_Url }}\",\n      \"method\": \"POST\"\n    }\n  ],\n  \"total_comments\": 240\n} ",
        "options": {
          "batching": {
            "batch": {}
          }
        }
      },
      "id": "1b57f7ec-f7f8-4080-b5a4-512c9fd9e52d",
      "name": "Comments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        -60
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "pageUrl, comment",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2320,
        160
      ],
      "id": "829ff6f0-b4c0-4e1e-a0f1-95c403de1e1b",
      "name": "Split Out"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2960,
        160
      ],
      "id": "53c0cc01-7d44-4964-bc17-83ce6d072df2",
      "name": "Positive"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2960,
        300
      ],
      "id": "a36731c9-a7a9-4bc6-b4c1-efb02b65eedf",
      "name": "Neutral"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "sentimentAnalysis"
            }
          ]
        },
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2960,
        440
      ],
      "id": "f0fbcf42-9306-4403-aa76-fb9f2e082a23",
      "name": "Negative"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ \"https://api.apify.com/v2/acts/topaz_sharingan~youtube-transcript-scraper-1/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m\" }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"startUrls\":[\"{{ $('Read_Videos').item.json.Video_Url }}\"]\n}\n\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 10,
              "batchInterval": 5000
            }
          }
        }
      },
      "id": "09cfe0ab-44fc-4440-9fb0-c5c1a13d0a9b",
      "name": "Youtube Transcript",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        -640
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.Markdown }}",
        "voice": "nova",
        "options": {
          "response_format": "aac",
          "binaryPropertyOutput": "audio"
        }
      },
      "id": "057cc906-959c-43fc-b33d-5a1caf1dd4eb",
      "name": "Text → Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        3000,
        720
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3360,
        300
      ],
      "id": "c8e30cbd-cc8a-406c-805f-fdac1dc99b22",
      "name": "Merge",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a title: {{ $json.message.content }} and a summary: {{ $('Researcher').item.json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        200,
        2880
      ],
      "id": "5e2b1539-dae8-4cda-90eb-c320be36bfb2",
      "name": "SEO Writer Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an Editor. You'll receive a draft:\n{{ $json.message.content }} of a blog article. Your task is to thoroughly check for grammar, punctuation, and readability. Ensure that the text flows smoothly, is free from errors, and maintains a clear, engaging tone. Make any necessary adjustments to improve clarity, structure, and accessibility for a broad audience."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        580,
        2880
      ],
      "id": "c9fd02f4-d190-4643-b48d-ecd74c1933fb",
      "name": "Editor Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Prompts').item.json.Summary }}",
        "messages": {
          "messageValues": [
            {
              "type": "AIMessagePromptTemplate",
              "message": "={{ $json.transcript }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2900,
        -640
      ],
      "id": "521b7b3a-e886-46d5-9ab7-626ee93584b4",
      "name": "Summary Agent",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "inputText": "={{ $json.comment }}",
        "options": {}
      },
      "id": "f986598c-2039-443a-8e24-2de976d82f7d",
      "name": "Comments Sentiment Analysis Agent",
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        2560,
        160
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a Title Generator for articles and blogposts. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article title that is informative, engaging, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and keep the length under 12 words."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        -180,
        2880
      ],
      "id": "51469ce9-1135-42a7-b624-1c8cc399e46b",
      "name": "Title Generator Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a Formatter. You'll receive a refined article draft: {{ $json.message.content }}. \nYour task is to format it for optimal readability and SEO impact. Use headings (H1, H2, H3) where appropriate, create short paragraphs, and add bullet points or numbered lists for clarity. Ensure each section flows logically, and highlight important information for better reader engagement. Check that keywords are strategically placed without disrupting the flow. "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        960,
        2880
      ],
      "id": "026a61a5-f779-42c4-96dd-bf66c9f92a61",
      "name": "Formatter Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        -20,
        3040
      ],
      "id": "32054070-9efa-4cb2-829c-0ff40243ef14",
      "name": "SerpAPI1",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        380,
        3040
      ],
      "id": "e6628d51-569c-4877-9f98-e3e6fb883925",
      "name": "SerpAPI2",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        380,
        3060
      ],
      "id": "bbfb4957-07c7-47e0-9067-593cde349cd7",
      "name": "Cover Picture & Charts Agent",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1920,
        -540
      ],
      "id": "2a8d0e2d-6fdf-4a6d-9cb8-aefddf243b3f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        -20,
        3060
      ],
      "id": "982ca386-2f0c-498b-b3a1-58a60f7f6320",
      "name": "Market Trend / Current News",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        800,
        3040
      ],
      "id": "94b51b5e-a31c-40d4-9165-42526d40f336",
      "name": "SerpAPI3",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        800,
        3060
      ],
      "id": "323a5b34-85a3-4ae9-b9d4-9dcfc4707e83",
      "name": "Knowledge Base RAG",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "content": "## Roadmap",
        "height": 80,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        3360
      ],
      "id": "255a31fe-3495-4700-a190-cad807724301",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "",
        "height": 460,
        "width": 1200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -40,
        3000
      ],
      "id": "01bc5baf-bbca-45e8-b3ae-8784b80acfb0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "a436018c-ea67-4cf9-a6c4-5ca32a08243a",
      "name": "Podcasts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1180,
        -240
      ]
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "042b9751-ff00-49e6-947b-510da34cfd54",
      "name": "RSS Feeds",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        -240
      ]
    },
    {
      "parameters": {
        "url": "={{ \"https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics,status,topicDetails&id=\" + $json.videoId + \"&key=AIzaSyCMWeQ5AXVGjzjzghkjpDRS0ULqBRkTNl4\" }}",
        "options": {}
      },
      "id": "9ce6fbaf-0701-48ab-8270-0344a041bf6b",
      "name": "News Letters",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1180,
        -60
      ]
    },
    {
      "parameters": {
        "content": "## Roadmap\n",
        "height": 640,
        "width": 600,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        -340
      ],
      "id": "070db2e7-d649-492b-9b34-9c1f16b25315",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        1400,
        -60
      ],
      "id": "df68332c-2186-4d7d-9992-1e96c16ee782",
      "name": "Blog"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1180,
        120
      ],
      "id": "409f85d7-2211-47d2-b0b9-135719fc8acd",
      "name": "Email",
      "credentials": {
        "smtp": {
          "id": "Dl8B2JzKzTKkFx5i",
          "name": "SMTP account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C085C7Q7FPY",
          "mode": "list",
          "cachedResultName": "content-generation"
        },
        "text": "awefr",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1400,
        120
      ],
      "id": "8e1ef7b8-f92c-4bed-8ece-dcb2f93c9a9c",
      "name": "Slack",
      "webhookId": "6dbc009e-41d1-4363-8b00-12037130eb37",
      "credentials": {
        "slackOAuth2Api": {
          "id": "7VOxhQHkBloxHtkn",
          "name": "syc-n8n"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "gl": "us",
          "hl": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        -380,
        3140
      ],
      "id": "ef9822f5-6bc4-405a-912d-a84201df4bc4",
      "name": ".",
      "credentials": {
        "serpApi": {
          "id": "1Tzl11P6LGX6jXlo",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an SEO Content Writer. You'll receive a summary: {{ $json.output }} with factual information on a topic. Your task is to craft a highly engaging, SEO-optimized blog article that is informative, well-structured, and aimed at outranking competitors. Prioritize readability, integrate relevant keywords naturally, and include actionable insights, examples, or tips that add unique value to the reader."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        380,
        3280
      ],
      "id": "bfd9ab4a-e49a-482b-b1f6-ef29fb52d6f8",
      "name": "Industry Voices",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1920,
        -1040
      ],
      "id": "035d3ee7-dacb-468b-a1d5-42ed627fd453",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {},
      "id": "837ef9b8-4e4a-413e-bd83-e5bcfb87d835",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -280,
        3140
      ]
    },
    {
      "parameters": {
        "name": "Now",
        "description": "Call this tool to get the context of the time now - the date and time we are in and references to the past and the future. For example, today, up to date, last month, this week, tomorrow, and other.",
        "jsCode": "function createDateReferences() {\n    try {\n        // Utility function to safely create dates and handle invalid dates\n        function createSafeDate(...args) {\n            const date = new Date(...args);\n            if (isNaN(date.getTime())) {\n                throw new Error(`Invalid date created with args: ${JSON.stringify(args)}`);\n            }\n            return date;\n        }\n\n        const now = createSafeDate();\n        const pstOptions = { timeZone: 'America/Los_Angeles' };\n\n        // Enhanced format function with error handling\n        function formatDate(date) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid date provided to formatDate');\n                }\n                return date.toLocaleDateString('en-US', {\n                    weekday: 'long',\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric',\n                    ...pstOptions\n                });\n            } catch (error) {\n                console.error(`Error formatting date: ${error.message}`);\n                return 'Invalid Date';\n            }\n        }\n\n        // Safe date manipulation with error handling\n        function manipulateDate(date, manipulation) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid base date for manipulation');\n                }\n                const newDate = createSafeDate(date);\n                manipulation(newDate);\n                if (isNaN(newDate.getTime())) {\n                    throw new Error('Date manipulation resulted in invalid date');\n                }\n                return newDate;\n            } catch (error) {\n                console.error(`Date manipulation error: ${error.message}`);\n                return createSafeDate(); // Return current date as fallback\n            }\n        }\n\n        // Handle month transitions safely\n        function getMonthBoundaries(yearOffset = 0, monthOffset = 0) {\n            try {\n                const year = now.getFullYear() + yearOffset;\n                const month = now.getMonth() + monthOffset;\n                \n                // Normalize month and year if we overflow\n                const normalizedYear = year + Math.floor(month / 12);\n                const normalizedMonth = ((month % 12) + 12) % 12; // Handle negative months\n\n                const start = createSafeDate(normalizedYear, normalizedMonth, 1);\n                const end = createSafeDate(normalizedYear, normalizedMonth + 1, 0);\n                \n                return { start, end };\n            } catch (error) {\n                console.error(`Error calculating month boundaries: ${error.message}`);\n                return {\n                    start: createSafeDate(),\n                    end: createSafeDate()\n                };\n            }\n        }\n\n        // Get week boundaries with error handling for DST transitions\n        function getWeekBoundaries(weekOffset = 0) {\n            try {\n                const startOfWeek = manipulateDate(now, d => {\n                    d.setDate(d.getDate() - d.getDay() + (weekOffset * 7));\n                    d.setHours(0, 0, 0, 0);\n                });\n\n                const endOfWeek = manipulateDate(startOfWeek, d => {\n                    d.setDate(d.getDate() + 6);\n                    d.setHours(23, 59, 59, 999);\n                });\n\n                return { start: startOfWeek, end: endOfWeek };\n            } catch (error) {\n                console.error(`Error calculating week boundaries: ${error.message}`);\n                return {\n                    start: createSafeDate(),\n                    end: createSafeDate()\n                };\n            }\n        }\n\n        // Safe time formatting with DST handling\n        function formatTime(date) {\n            try {\n                if (!date || isNaN(date.getTime())) {\n                    throw new Error('Invalid date provided to formatTime');\n                }\n                return date.toLocaleTimeString('en-US', {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                    hour12: true,\n                    ...pstOptions\n                });\n            } catch (error) {\n                console.error(`Error formatting time: ${error.message}`);\n                return 'Invalid Time';\n            }\n        }\n\n        // Determine timezone with error handling\n        function getTimezoneIndicator() {\n            try {\n                const pstDate = new Date().toLocaleString('en-US', pstOptions);\n                return pstDate.includes('PDT') ? 'PDT' : 'PST';\n            } catch (error) {\n                console.error(`Error determining timezone: ${error.message}`);\n                return 'PST'; // Default to PST if there's an error\n            }\n        }\n\n        const thisWeek = getWeekBoundaries(0);\n        const lastWeek = getWeekBoundaries(-1);\n        const nextWeek = getWeekBoundaries(1);\n\n        const thisMonth = getMonthBoundaries(0, 0);\n        const lastMonth = getMonthBoundaries(0, -1);\n        const nextMonth = getMonthBoundaries(0, 1);\n\n        const thisYear = {\n            start: createSafeDate(now.getFullYear(), 0, 1),\n            end: createSafeDate(now.getFullYear(), 11, 31)\n        };\n        const lastYear = {\n            start: createSafeDate(now.getFullYear() - 1, 0, 1),\n            end: createSafeDate(now.getFullYear() - 1, 11, 31)\n        };\n        const nextYear = {\n            start: createSafeDate(now.getFullYear() + 1, 0, 1),\n            end: createSafeDate(now.getFullYear() + 1, 11, 31)\n        };\n\n        const formattedTime = formatTime(now);\n        const timezoneIndicator = getTimezoneIndicator();\n\n        return {\n            json: {\n                current: {\n                    dateTime: `${formatDate(now)} at ${formattedTime} ${timezoneIndicator}`,\n                    date: formatDate(now),\n                    time: `${formattedTime} ${timezoneIndicator}`,\n                    timezone: timezoneIndicator,\n                    timestamp: now.getTime() // Include timestamp for additional reference\n                },\n                relative: {\n                    yesterday: formatDate(manipulateDate(now, d => d.setDate(d.getDate() - 1))),\n                    today: formatDate(now),\n                    tomorrow: formatDate(manipulateDate(now, d => d.setDate(d.getDate() + 1)))\n                },\n                weeks: {\n                    thisWeek: {\n                        start: formatDate(thisWeek.start),\n                        end: formatDate(thisWeek.end)\n                    },\n                    lastWeek: {\n                        start: formatDate(lastWeek.start),\n                        end: formatDate(lastWeek.end)\n                    },\n                    nextWeek: {\n                        start: formatDate(nextWeek.start),\n                        end: formatDate(nextWeek.end)\n                    }\n                },\n                months: {\n                    thisMonth: {\n                        start: formatDate(thisMonth.start),\n                        end: formatDate(thisMonth.end)\n                    },\n                    lastMonth: {\n                        start: formatDate(lastMonth.start),\n                        end: formatDate(lastMonth.end)\n                    },\n                    nextMonth: {\n                        start: formatDate(nextMonth.start),\n                        end: formatDate(nextMonth.end)\n                    }\n                },\n                years: {\n                    thisYear: {\n                        start: formatDate(thisYear.start),\n                        end: formatDate(thisYear.end)\n                    },\n                    lastYear: {\n                        start: formatDate(lastYear.start),\n                        end: formatDate(lastYear.end)\n                    },\n                    nextYear: {\n                        start: formatDate(nextYear.start),\n                        end: formatDate(nextYear.end)\n                    }\n                }\n            }\n        };\n    } catch (error) {\n        // Global error handler\n        console.error('Critical error in date reference creation:', error);\n        // Return a minimal valid response with current date/time\n        const fallbackDate = new Date();\n        return {\n            json: {\n                error: true,\n                errorMessage: error.message,\n                current: {\n                    dateTime: fallbackDate.toISOString(),\n                    date: fallbackDate.toDateString(),\n                    time: fallbackDate.toTimeString(),\n                    timezone: 'PST'\n                }\n            }\n        };\n    }\n}\n\nreturn JSON.stringify(createDateReferences());"
      },
      "id": "5d42936d-8445-4c95-b7dd-4a4b882f0797",
      "name": "Now",
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        -480,
        3140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -700,
        3140
      ],
      "id": "25b8fe22-75ce-46c3-97b7-a9c484f843cb",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6de5eab2-bc17-4a24-aa4a-704058cb46db",
              "name": "Source",
              "value": "={{ $json.Source }}",
              "type": "string"
            },
            {
              "id": "c7e16f00-1bca-4536-b33b-5efaa5326505",
              "name": "SourceType",
              "value": "={{ $json.SourceType }}",
              "type": "string"
            },
            {
              "id": "54b8e27c-5a91-4060-860f-7d5b1bc32c04",
              "name": "URL",
              "value": "={{ $json.channelUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2620,
        -1100
      ],
      "id": "b11a639e-1b15-49e3-bb1a-9b38aeb4c35b",
      "name": "To Process"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e22ea465-92e5-4eb3-bd45-3ba45dd8bab8",
              "leftValue": "={{ $json.Process_channel }}",
              "rightValue": "TRUE",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2360,
        -1040
      ],
      "id": "844bee5c-766a-4edc-9f3e-1828df25db79",
      "name": "to Process",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items?token=apify_api_JhKdeVu3pgj83fvoqQyz4BPOAM2o222xmV0m",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"dateFilter\": \"year\",\n    \"downloadSubtitles\": false,\n    \"hasCC\": false,\n    \"hasLocation\": false,\n    \"hasSubtitles\": false,\n    \"is360\": false,\n    \"is3D\": false,\n    \"is4K\": false,\n    \"isBought\": false,\n    \"isHD\": false,\n    \"isHDR\": false,\n    \"isLive\": false,\n    \"isVR180\": false,\n    \"maxResultStreams\": 0,\n    \"maxResults\": 100,\n    \"maxResultsShorts\": 0,\n    \"oldestPostDate\": \"2024-01-01\",\n    \"preferAutoGeneratedSubtitles\": false,\n    \"saveSubsToKVS\": false,\n    \"startUrls\": [\n        {\n            \"url\": \"{{ $json.URL }}\",\n            \"method\": \"POST\"\n        }\n    ],\n    \"subtitlesLanguage\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        -1100
      ],
      "id": "1b8801ff-5dc4-483f-b568-a9f03f965900",
      "name": "APIfy_YT_Scrap",
      "alwaysOutputData": true,
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c64b4b44-ad44-4b2a-a981-676cd3fb2b11",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "c7638328-03a1-4da4-8157-8cbfd046362d",
              "name": "type",
              "value": "={{ $json.type }}",
              "type": "string"
            },
            {
              "id": "43a3f593-4ad9-4a1a-a597-eddf5ec329dd",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "09bcc045-7426-48ad-983c-6ae4cd373b6e",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "67dabedf-6af7-487d-82cc-cd89e1842fdb",
              "name": "thumbnailUrl",
              "value": "={{ $json.thumbnailUrl }}",
              "type": "string"
            },
            {
              "id": "814bc874-57fa-4844-9b62-1d1a4a0d2ff4",
              "name": "viewCount",
              "value": "={{ $json.viewCount }}",
              "type": "number"
            },
            {
              "id": "0f8117a1-5e3a-46b3-942b-65c2ac10c1f0",
              "name": "date",
              "value": "={{ $json.date }}",
              "type": "string"
            },
            {
              "id": "107c3d01-0a3e-40a4-afb6-c01d330cadca",
              "name": "likes",
              "value": "={{ $json.likes }}",
              "type": "number"
            },
            {
              "id": "e06498be-f809-4d87-9c33-30c63f873223",
              "name": "location",
              "value": "={{ $json.location }}",
              "type": "string"
            },
            {
              "id": "277f12b5-3f21-449c-8c16-1685720bb180",
              "name": "channelName",
              "value": "={{ $json.channelName }}",
              "type": "string"
            },
            {
              "id": "14c8ee06-f570-4912-83b8-0cf352a4b49f",
              "name": "channelId",
              "value": "={{ $json.channelId }}",
              "type": "string"
            },
            {
              "id": "ed1aff4e-422f-4f72-a788-ad9964159afc",
              "name": "channelUsername",
              "value": "={{ $json.channelUsername }}",
              "type": "string"
            },
            {
              "id": "6a5d055d-de84-463b-8943-f3a64581875b",
              "name": "channelDescription",
              "value": "={{ $json.channelDescription }}",
              "type": "string"
            },
            {
              "id": "3e3f63d5-8b8d-48c2-9b60-c2be47c41ede",
              "name": "channelJoinedDate",
              "value": "={{ $json.channelJoinedDate }}",
              "type": "string"
            },
            {
              "id": "cec912eb-5719-4e6c-b287-49b675f88fed",
              "name": "channelDescriptionLinks",
              "value": "={{ $json.channelDescriptionLinks }}",
              "type": "array"
            },
            {
              "id": "e472e1b3-f385-4302-ae35-444ac637af91",
              "name": "channelLocation",
              "value": "={{ $json.channelLocation }}",
              "type": "string"
            },
            {
              "id": "71569961-ea92-4de6-b85d-6e36ae0f8394",
              "name": "channelAvatarUrl",
              "value": "={{ $json.channelAvatarUrl }}",
              "type": "string"
            },
            {
              "id": "9764407d-4e64-4d14-9e22-926d4c16ee41",
              "name": "channelBannerUrl",
              "value": "={{ $json.channelBannerUrl }}",
              "type": "string"
            },
            {
              "id": "402a7b3f-93e5-4d7b-b744-3d2dcc533396",
              "name": "channelTotalVideos",
              "value": "={{ $json.channelTotalVideos }}",
              "type": "number"
            },
            {
              "id": "3c95c8ec-201d-46f2-8e2f-77b5ce2be5bd",
              "name": "channelTotalViews",
              "value": "={{ $json.channelTotalViews }}",
              "type": "number"
            },
            {
              "id": "25137089-dd66-4a99-a193-089284091cdc",
              "name": "numberOfSubscribers",
              "value": "={{ $json.numberOfSubscribers }}",
              "type": "number"
            },
            {
              "id": "f43a07ae-af0b-452e-978f-603d5054f0d8",
              "name": "isChannelVerified",
              "value": "={{ $json.isChannelVerified }}",
              "type": "boolean"
            },
            {
              "id": "1b4a3024-8154-4f02-9415-e0bb55594b64",
              "name": "inputChannelUrl",
              "value": "={{ $json.inputChannelUrl }}",
              "type": "string"
            },
            {
              "id": "51897024-7627-42ad-a3da-9d867c169851",
              "name": "isAgeRestricted",
              "value": "={{ $json.isAgeRestricted }}",
              "type": "boolean"
            },
            {
              "id": "6c479cb6-40bc-4901-80dc-9aa11160fb1b",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "string"
            },
            {
              "id": "09dc0dea-20af-4aa4-b000-30ce51a8fc84",
              "name": "commentsCount",
              "value": "={{ $json.commentsCount }}",
              "type": "number"
            },
            {
              "id": "5b86b5f6-0505-4f44-9483-0f3da5f0f142",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "71651238-0a47-4d59-b824-3674141242c7",
              "name": "subtitles",
              "value": "={{ $json.subtitles }}",
              "type": "string"
            },
            {
              "id": "de440a72-3bda-4464-94ab-1e81c4d072fd",
              "name": "commentsTurnedOff",
              "value": "={{ $json.commentsTurnedOff }}",
              "type": "boolean"
            },
            {
              "id": "7a3fdd9f-99b6-4777-8b2a-aa141d41d596",
              "name": "comments",
              "value": "={{ $json.comments }}",
              "type": "string"
            },
            {
              "id": "a5dc0077-4f16-4587-8314-b311412ad76e",
              "name": "fromYTUrl",
              "value": "={{ $json.fromYTUrl }}",
              "type": "string"
            },
            {
              "id": "de2d962c-e74a-461d-bf41-b0316e9b43fb",
              "name": "isMonetized",
              "value": "={{ $json.isMonetized }}",
              "type": "string"
            },
            {
              "id": "b1ab1fb9-de2b-4ac1-97bd-344c15395e24",
              "name": "hashtags",
              "value": "={{ $json.hashtags }}",
              "type": "array"
            },
            {
              "id": "81590c57-4aca-4144-8b73-321075a1e61c",
              "name": "formats",
              "value": "={{ $json.formats }}",
              "type": "array"
            },
            {
              "id": "782c7e19-0154-4a4c-8526-5dd308a9b9dc",
              "name": "input",
              "value": "={{ $json.input }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3060,
        -1100
      ],
      "id": "88de8156-0092-49bd-81be-d7cda55529a2",
      "name": "Channel Videos"
    },
    {
      "parameters": {
        "jsCode": "// Debugging to see if nodes have been executed and data is available\nconsole.log('Positive Node Data:', $('Positive').first());\nconsole.log('Negative Node Data:', $('Negative').first());\nconsole.log('Neutral Node Data:', $('Neutral').first());\n\n// Get the counts from input items\nconst positive = $('Positive').first()?.json.count_sentimentAnalysis || 0;\nconst negative = $('Negative').first()?.json.count_sentimentAnalysis || 0; \nconst neutral = $('Neutral').first()?.json.count_sentimentAnalysis || 0;\n\n// Calculate total comments\nconst total_comments = positive + neutral + negative;\nif (total_comments === 0) {\n  return { json: { snps: 0, details: { positive_percent: \"0%\", negative_percent: \"0%\", total_comments: total_comments } } };\n}\n\nconst percentPositive = (positive / total_comments) * 100;\nconst percentNegative = (negative / total_comments) * 100;\nconst snps = (percentPositive - percentNegative).toFixed(2);\n\nreturn {\n  json: {\n    snps: snps,\n    details: {\n      positive_percent: percentPositive.toFixed(2) + '%',\n      negative_percent: percentNegative.toFixed(2) + '%',\n      total_comments: total_comments\n    }\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3540,
        300
      ],
      "id": "49ae1488-128a-45e1-a8f9-917d8f0fd08b",
      "name": "sNPS",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8",
          "mode": "list",
          "cachedResultName": "Blue&: Content Generation Platform",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1471096355,
          "mode": "list",
          "cachedResultName": "prompts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/110Nw_L6hSvJHMAeNd9K1EK72tuUUfXoAaybOi2hmig8/edit#gid=1471096355"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1280,
        740
      ],
      "id": "95f21e14-cf03-4f61-9458-e45b1db84a80",
      "name": "Prompts2",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rSTr7Ltjwpw9Xvz2",
          "name": "Google Sheets account 5"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "airtableOAuth2Api",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "Title": "={{ $json.title }}",
            "Type": "={{ $json.type }}",
            "Id": "={{ $json.id }}",
            "Viewcount": "={{ $json.viewCount }}",
            "Thumbnailurl": "={{ $json.thumbnailUrl }}",
            "Url": "={{ $json.url }}",
            "Channelname": "={{ $json.channelName }}",
            "Location": "={{ $json.location }}",
            "Likes": "={{ $json.likes }}",
            "Date": "={{ $json.date }}",
            "Input": "={{ $json.input }}",
            "Formats": "={{ JSON.stringify($json[\"formats\"][0]).replace(/[{}]/g, '') }}",
            "Hashtags": "={{JSON.stringify($json[\"hashtags\"]).replace(/[{}]/g,'') }}",
            "Ismonetized": "={{ $json.isMonetized }}",
            "Fromyturl": "={{ $json.fromYTUrl }}",
            "Comments": "={{ $json.comments }}",
            "Commentsturnedoff": "={{ $json.commentsTurnedOff.toString() }}",
            "Subtitles": "={{ $json.subtitles }}",
            "Text": "={{ $json.text }}",
            "Duration": "={{ $json.duration }}",
            "Isagerestricted": "={{ $json.isAgeRestricted.toString() }}",
            "Inputchannelurl": "={{ $json.inputChannelUrl }}",
            "Ischannelverified": "={{ $json.isChannelVerified.toString() }}",
            "Numberofsubscribers": "={{ $json.numberOfSubscribers }}",
            "Channeltotalviews": "={{ $json.channelTotalViews }}",
            "Channeltotalvideos": "={{ $json.channelTotalVideos }}",
            "Description": "={{ $('APIfy_YT_Scrap').item.json.text }}",
            "Process": "=",
            "Date_from_channel": "={{ $json.date }}",
            "Date_processed": "={{$now}}",
            "Channels": "={{ $json.channelUrl }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_from_channel",
              "displayName": "Date_from_channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_processed",
              "displayName": "Date_processed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channels",
              "displayName": "Channels",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Handle (from Channels)",
              "displayName": "Handle (from Channels)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Highlights",
              "displayName": "Highlights",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Url",
              "displayName": "Url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Thumbnailurl",
              "displayName": "Thumbnailurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Viewcount",
              "displayName": "Viewcount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channelname",
              "displayName": "Channelname",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalvideos",
              "displayName": "Channeltotalvideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalviews",
              "displayName": "Channeltotalviews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Numberofsubscribers",
              "displayName": "Numberofsubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ischannelverified",
              "displayName": "Ischannelverified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Inputchannelurl",
              "displayName": "Inputchannelurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Isagerestricted",
              "displayName": "Isagerestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Subtitles",
              "displayName": "Subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Commentsturnedoff",
              "displayName": "Commentsturnedoff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Comments",
              "displayName": "Comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Fromyturl",
              "displayName": "Fromyturl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ismonetized",
              "displayName": "Ismonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Formats",
              "displayName": "Formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": false
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1020,
        740
      ],
      "id": "37955fea-309a-438e-8d4e-772b4c90b3ad",
      "name": "Channel Content tmp",
      "credentials": {
        "airtableOAuth2Api": {
          "id": "LDzy6MU6xGIUvyoG",
          "name": "Airtable OAuth ✔️️"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video_Url": "={{ $json.url }}",
            "Channel": "={{ $json.channelName }}",
            "Channel_Id": "={{ $json.channelId }}",
            "Description": "={{ $json.channelDescription }}",
            "Channelname": "={{ $json.channelName }}",
            "Channeltotalvideos": "={{ $json.channelTotalVideos }}",
            "Channeltotalviews": "={{ $json.channelTotalViews }}",
            "Numberofsubscribers": "={{ $json.numberOfSubscribers }}",
            "Ischannelverified": "={{ $json.isChannelVerified }}",
            "Inputchannelurl": "={{ $json.inputChannelUrl }}",
            "Duration": "={{ $json.duration }}",
            "Input": "={{ $json.input }}",
            "Formats": "={{ $json.formats }}",
            "Hashtags": "={{ $json.hashtags }}",
            "Ismonetized": "={{ $json.isMonetized }}",
            "Fromyturl": "={{ $json.fromYTUrl }}",
            "Comments": "={{ $json.comments }}",
            "Commentsturnedoff": "={{ $json.commentsTurnedOff }}",
            "Subtitles": "={{ $json.subtitles }}",
            "Location": "={{ $json.location }}",
            "Likes": "={{ $json.likes }}",
            "Date": "={{ $json.date }}",
            "Viewcount": "={{ $json.viewCount }}",
            "Thumbnailurl": "={{ $json.thumbnailUrl }}",
            "Video_Id": "={{ $json.id }}",
            "Type": "={{ $json.type }}",
            "Title": "={{ $json.title }}",
            "Transcript": "={{ $json.text }}",
            "Date_processed": "={{$now}}"
          },
          "matchingColumns": [
            "Video_Url"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Process",
              "displayName": "Process",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_from_channel",
              "displayName": "Date_from_channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_processed",
              "displayName": "Date_processed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel_Id",
              "displayName": "Channel_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel_Id (from Channels)",
              "displayName": "Channel_Id (from Channels)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Highlights",
              "displayName": "Highlights",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Video_Id",
              "displayName": "Video_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Video_Url",
              "displayName": "Video_Url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Thumbnailurl",
              "displayName": "Thumbnailurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Viewcount",
              "displayName": "Viewcount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channelname",
              "displayName": "Channelname",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalvideos",
              "displayName": "Channeltotalvideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channeltotalviews",
              "displayName": "Channeltotalviews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Numberofsubscribers",
              "displayName": "Numberofsubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ischannelverified",
              "displayName": "Ischannelverified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Inputchannelurl",
              "displayName": "Inputchannelurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Isagerestricted",
              "displayName": "Isagerestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Subtitles",
              "displayName": "Subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Commentsturnedoff",
              "displayName": "Commentsturnedoff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Comments",
              "displayName": "Comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Fromyturl",
              "displayName": "Fromyturl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Ismonetized",
              "displayName": "Ismonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Formats",
              "displayName": "Formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": true
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2780,
        900
      ],
      "id": "253f6463-2e69-4626-8c8d-6ea440b0f4b6",
      "name": "Channel Content1",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "html": "={{ $json.html }}",
        "destinationKey": "Markdown",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        2780,
        720
      ],
      "id": "f9cd07b2-1bf0-49cc-88b3-5ad6f8f87d25",
      "name": "Markdown"
    },
    {
      "parameters": {
        "content": "## Comments Sentiment Analysis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Score Ranges:\n-100 to +100 possible range\nAbove 0: Generally positive sentiment\nAbove 30: Considered good\nAbove 50: Excellent\nAbove 70: Exceptional/Industry leading\n\n## Interpretation Guidelines:\nBelow -20: Critical issues need addressing\n-20 to 0: Room for significant improvement\n0 to 30: Average/Acceptable\n30 to 50: Strong positive sentiment\n50+: Outstanding sentiment\n\n\n\n",
        "height": 720,
        "width": 2260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        -120
      ],
      "id": "44b6f604-2be7-41c6-a23f-3e65042805b4",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4180,
        -400
      ],
      "id": "322d4d4d-7cc1-4e27-ae53-2b3f62d074b2",
      "name": "OpenAI 0",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "content": "## Channels\n",
        "height": 300,
        "width": 2260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        -1160
      ],
      "id": "2071c9fe-483f-47e3-944a-60224586f862",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Videos\n",
        "height": 340,
        "width": 2260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        -680
      ],
      "id": "80b2cd05-d3bc-43f0-881b-3384ad2e80c1",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cd072210-83ac-44dc-8057-1ea6c0296768",
      "name": "OpenAI 2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2720,
        400
      ],
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "content": "# Roadmap\n\n## Knowledge Base (KB)\n- Refine KB template\n- Refine prompts\n- Expand KB to include Podcasts, RSS feeds, Newsletters, Blogs\n- Define Process and Human participation: input, approvals, output\n- RAG: Update Vector Store - Linear, Graph, Industry Voices\n- Process audio to generate own transcripts (backup)\n\n## Process Definition\n- Channel selection for KB\n- Who, When, How reviews/approves input to KB\n- Form, Slack, Email, Trello, Google Drive, Airtable\n\n## Article generation\n- Refine Article template\n- Topic Selection Agent\n- Refine prompts\n- Faceless videos\n- RAG: Reference Vector Store - Linear, Graph, Industry Voices\n\n## Agents\n- Images \n- Stats & Charts\n- Enhanced Audio generation\n- KB Virality Assessment (sNPS & Sentiment Analysis)\n",
        "height": 720,
        "width": 600
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        -1140
      ],
      "id": "48099515-02cb-468e-91c4-afbdf9649973",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3000,
        900
      ],
      "id": "e3bfefdf-839a-443d-b4c9-06b6cdc70386",
      "name": "Schedule Trigger2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1640,
        560
      ],
      "id": "ad0e2e00-7efd-4bee-b6f5-a1e0db3a7c6d",
      "name": "Schedule Trigger3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3680,
        80
      ],
      "id": "f60ea077-0e26-468a-94a7-68402eba2213",
      "name": "Merge2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4180,
        -580
      ],
      "id": "57d338b6-aa1b-4386-8171-ca00b0418b4a",
      "name": "OpenAI ",
      "credentials": {
        "openAiApi": {
          "id": "n6jJpStEewoZQA9T",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3640,
        -540
      ],
      "id": "b6fa2b0c-969c-4d12-a8d8-d48493808378",
      "name": "Merge3",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblQVGiDUAOgPPOzp",
          "mode": "list",
          "cachedResultName": "Prompts",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblQVGiDUAOgPPOzp"
        },
        "options": {
          "fields": [],
          "view": {
            "__rl": true,
            "value": "viww8jDFKC0kpniCm",
            "mode": "list",
            "cachedResultName": "Grid view",
            "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblQVGiDUAOgPPOzp/viww8jDFKC0kpniCm"
          }
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2120,
        -540
      ],
      "id": "4c42d43c-f939-4d58-a0c6-1159bfec510e",
      "name": "Prompts",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2320,
        -540
      ],
      "id": "d52ccc01-cee7-4b3d-a052-19e7f35dc6e2",
      "name": "Read_Videos",
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblmB1yGomABObnxm",
          "mode": "list",
          "cachedResultName": "Channels",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblmB1yGomABObnxm"
        },
        "filterByFormula": "{Process_channel} = 'true'",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2140,
        -1040
      ],
      "id": "361d365f-6371-4343-b505-e9ee97e665db",
      "name": "Read_Channels",
      "executeOnce": false,
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblmB1yGomABObnxm",
          "mode": "list",
          "cachedResultName": "Channels",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblmB1yGomABObnxm"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "viewCount": "={{ $json.channelTotalViews }}",
            "channelTotalVideos": "={{ $json.channelTotalVideos }}",
            "numberOfSubscribers": "={{ $json.numberOfSubscribers }}",
            "commentsCount": "={{ $json.commentsCount }}",
            "Process_Date": "={{ $now.toUTC()}}",
            "channelName": "={{ $json.channelName }}",
            "channelId": "={{ $json.channelId }}",
            "channelUsername": "={{ $json.channelUsername }}",
            "channelDescription": "={{ $json.channelDescription }}",
            "channelJoinedDate": "={{ $json.channelJoinedDate }}",
            "channelLocation": "={{ $json.channelLocation }}",
            "channelAvatarUrl": "={{ $json.channelAvatarUrl }}",
            "isChannelVerified": "={{ $json.isChannelVerified }}",
            "isAgeRestricted": "={{ $json.isAgeRestricted }}",
            "fromYTUrl": "={{ $json.fromYTUrl }}",
            "channelUrl": "={{ $json.inputChannelUrl }}",
            "channelDescriptionLinks": "={{ $json.channelDescriptionLinks }}",
            "channelBannerUrl": "={{ $json.channelBannerUrl }}",
            "inputChannelUrl": "={{ $json.inputChannelUrl }}",
            "isMonetized": "={{ $json.isMonetized }}",
            "hashtags": "={{ $json.hashtags }}",
            "formats": "={{ $json.formats }}",
            "date": "={{ $now }}",
            "thumbnailUrl": "="
          },
          "matchingColumns": [
            "channelUrl"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true
            },
            {
              "id": "channelUrl",
              "displayName": "channelUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Carvana",
                  "value": "Carvana"
                },
                {
                  "name": "CarOffer",
                  "value": "CarOffer"
                },
                {
                  "name": "Accu-trade",
                  "value": "Accu-trade"
                },
                {
                  "name": "Car Dealership Guy",
                  "value": "Car Dealership Guy"
                },
                {
                  "name": "Automotive Ventures",
                  "value": "Automotive Ventures"
                },
                {
                  "name": "KBB",
                  "value": "KBB"
                },
                {
                  "name": "PrivateAuto",
                  "value": "PrivateAuto"
                },
                {
                  "name": "AutolineNetwork",
                  "value": "AutolineNetwork"
                },
                {
                  "name": "Ernie Garcia",
                  "value": "Ernie Garcia"
                },
                {
                  "name": "Bruce Thompson",
                  "value": "Bruce Thompson"
                },
                {
                  "name": "Robert Hollenshead",
                  "value": "Robert Hollenshead"
                },
                {
                  "name": "Yossi J Levi",
                  "value": "Yossi J Levi"
                },
                {
                  "name": "Steve Greenfield",
                  "value": "Steve Greenfield"
                },
                {
                  "name": "Steve Lind",
                  "value": "Steve Lind"
                },
                {
                  "name": "Brad Parker",
                  "value": "Brad Parker"
                },
                {
                  "name": " Brian Kramer",
                  "value": " Brian Kramer"
                },
                {
                  "name": "ASOTU | More Than Cars",
                  "value": "ASOTU | More Than Cars"
                },
                {
                  "name": "The Dealer Playbook",
                  "value": "The Dealer Playbook"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "SourceType",
              "displayName": "SourceType",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "youtube#video",
                  "value": "youtube#video"
                },
                {
                  "name": "youtube",
                  "value": "youtube"
                },
                {
                  "name": "LinkedIn",
                  "value": "LinkedIn"
                },
                {
                  "name": "Podcast",
                  "value": "Podcast"
                },
                {
                  "name": "RSS",
                  "value": "RSS"
                },
                {
                  "name": "persona",
                  "value": "persona"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Process_channel",
              "displayName": "Process_channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Process_Date",
              "displayName": "Process_Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelName",
              "displayName": "channelName",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "numberOfSubscribers",
              "displayName": "numberOfSubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelTotalVideos",
              "displayName": "channelTotalVideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "viewCount",
              "displayName": "viewCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelJoinedDate",
              "displayName": "channelJoinedDate",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelDescription",
              "displayName": "channelDescription",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelUsername",
              "displayName": "channelUsername",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelId",
              "displayName": "channelId",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelDescriptionLinks",
              "displayName": "channelDescriptionLinks",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelLocation",
              "displayName": "channelLocation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelAvatarUrl",
              "displayName": "channelAvatarUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "inputChannelUrl",
              "displayName": "inputChannelUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isChannelVerified",
              "displayName": "isChannelVerified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isAgeRestricted",
              "displayName": "isAgeRestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "fromYTUrl",
              "displayName": "fromYTUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "commentsCount",
              "displayName": "commentsCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "channelBannerUrl",
              "displayName": "channelBannerUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false
            },
            {
              "id": "thumbnailUrl",
              "displayName": "thumbnailUrl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "subtitles",
              "displayName": "subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "commentsTurnedOff",
              "displayName": "commentsTurnedOff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "isMonetized",
              "displayName": "isMonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "hashtags",
              "displayName": "hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "formats",
              "displayName": "formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "input",
              "displayName": "input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "descriptionLinks",
              "displayName": "descriptionLinks",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Videos",
              "displayName": "Videos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": true
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3280,
        -1100
      ],
      "id": "321633e3-ec08-48a2-a3de-c67f5115960b",
      "name": "Write Channels",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video_Url": "={{ $('Channel Videos').item.json.url }}",
            "Channelname": "={{ $('Channel Videos').item.json.channelName }}",
            "Duration": "={{ $('APIfy_YT_Scrap').item.json.duration }}",
            "Commentsturnedoff": "={{ $('APIfy_YT_Scrap').item.json.commentsTurnedOff }}",
            "Subtitles": "={{ $('APIfy_YT_Scrap').item.json.subtitles }}",
            "Likes": "={{ $('Channel Videos').item.json.likes }}",
            "Date": "={{ $('Channel Videos').item.json.date }}",
            "Viewcount": "={{ $('Channel Videos').item.json.viewCount }}",
            "Thumbnailurl": "={{ $('Channel Videos').item.json.thumbnailUrl }}",
            "Video_Id": "={{ $('Channel Videos').item.json.url }}",
            "Transcript": "=",
            "Date_processed": "={{$now}}",
            "Description": "={{ $('Channel Videos').item.json.text }}",
            "Title": "={{ $('Channel Videos').item.json.title }}",
            "sNPS": 0
          },
          "matchingColumns": [
            "Video_Id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Video_Id",
              "displayName": "Video_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Classified",
              "displayName": "Classified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Process_video",
              "displayName": "Process_video",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date_processed",
              "displayName": "Date_processed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel_Updated",
              "displayName": "Channel_Updated",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "KB_Approved",
              "displayName": "KB_Approved",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "",
                  "value": ""
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Viewcount",
              "displayName": "Viewcount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "sNPS",
              "displayName": "sNPS",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Video_Url",
              "displayName": "Video_Url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Thumbnailurl",
              "displayName": "Thumbnailurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Commentsturnedoff",
              "displayName": "Commentsturnedoff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channelname",
              "displayName": "Channelname",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channel_Id",
              "displayName": "Channel_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channeltotalvideos",
              "displayName": "Channeltotalvideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channeltotalviews",
              "displayName": "Channeltotalviews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Numberofsubscribers",
              "displayName": "Numberofsubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Ischannelverified",
              "displayName": "Ischannelverified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Inputchannelurl",
              "displayName": "Inputchannelurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Isagerestricted",
              "displayName": "Isagerestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Subtitles",
              "displayName": "Subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Comments",
              "displayName": "Comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Fromyturl",
              "displayName": "Fromyturl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Ismonetized",
              "displayName": "Ismonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Formats",
              "displayName": "Formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": true
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3480,
        -1100
      ],
      "id": "79d77654-83c9-4ac2-8d4b-0b002a26a0ac",
      "name": "Write_Videos",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblpRHrnM7h0Hvrjb",
          "mode": "list",
          "cachedResultName": "Videos",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblpRHrnM7h0Hvrjb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video_Url": "={{ $('Read_Videos').item.json.Video_Url }}",
            "Video_Id": "={{ $('Youtube Transcript').item.json.url }}",
            "Transcript": "={{ $('Youtube Transcript').item.json.transcript }}",
            "Date_processed": "={{$now}}",
            "Summary": "={{ $('Summary Agent').item.json.text }}",
            "sNPS": 0,
            "Classified": "="
          },
          "matchingColumns": [
            "Video_Url"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Video_Id",
              "displayName": "Video_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Classified",
              "displayName": "Classified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Process_video",
              "displayName": "Process_video",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Date_processed",
              "displayName": "Date_processed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Channel_Updated",
              "displayName": "Channel_Updated",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "KB_Approved",
              "displayName": "KB_Approved",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "",
                  "value": ""
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Duration",
              "displayName": "Duration",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Viewcount",
              "displayName": "Viewcount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "sNPS",
              "displayName": "sNPS",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Video_Url",
              "displayName": "Video_Url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Thumbnailurl",
              "displayName": "Thumbnailurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Commentsturnedoff",
              "displayName": "Commentsturnedoff",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channelname",
              "displayName": "Channelname",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channel_Id",
              "displayName": "Channel_Id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channeltotalvideos",
              "displayName": "Channeltotalvideos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Channeltotalviews",
              "displayName": "Channeltotalviews",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Numberofsubscribers",
              "displayName": "Numberofsubscribers",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Ischannelverified",
              "displayName": "Ischannelverified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Inputchannelurl",
              "displayName": "Inputchannelurl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Isagerestricted",
              "displayName": "Isagerestricted",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Text",
              "displayName": "Text",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Subtitles",
              "displayName": "Subtitles",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Comments",
              "displayName": "Comments",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Fromyturl",
              "displayName": "Fromyturl",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Ismonetized",
              "displayName": "Ismonetized",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Formats",
              "displayName": "Formats",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": false,
          "updateAllMatches": false
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3840,
        -540
      ],
      "id": "6e275a4c-40f7-4c78-98d4-91c20882b8cd",
      "name": "Update_Videos",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tbltMGiskcvr9yejM",
          "mode": "list",
          "cachedResultName": "Comments",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tbltMGiskcvr9yejM"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video_url": "={{ $('Comments').item.json.pageUrl }}",
            "commentsCount": "={{ $('Comments').item.json.commentsCount }}",
            "cid": "={{ $('Comments').item.json.cid }}",
            "error": "={{ $('Comments').item.json.error }}",
            "title": "={{ $('Comments').item.json.title }}",
            "type": "={{ $('Comments').item.json.type }}",
            "publishedTimeText": "={{ $('Comments').item.json.publishedTimeText }}",
            "comment": "={{ $('Comments').item.json.comment }}",
            "author": "={{ $('Comments').item.json.author }}",
            "authorIsChannelOwner": "={{ $('Comments').item.json.authorIsChannelOwner }}",
            "replyCount": "={{ $('Comments').item.json.replyCount }}",
            "voteCount": "={{ $('Comments').item.json.voteCount }}",
            "hasCreatorHeart": "={{ $('Comments').item.json.hasCreatorHeart }}",
            "replyToCid": "={{ $('Comments').item.json.replyToCid }}"
          },
          "matchingColumns": [
            "Video_url"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Video_url",
              "displayName": "Video_url",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "commentsCount",
              "displayName": "commentsCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "error",
              "displayName": "error",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "cid",
              "displayName": "cid",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "replyToCid",
              "displayName": "replyToCid",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "publishedTimeText",
              "displayName": "publishedTimeText",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "comment",
              "displayName": "comment",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "author",
              "displayName": "author",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "authorIsChannelOwner",
              "displayName": "authorIsChannelOwner",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "replyCount",
              "displayName": "replyCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "voteCount",
              "displayName": "voteCount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "hasCreatorHeart",
              "displayName": "hasCreatorHeart",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Sentiment",
              "displayName": "Sentiment",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": true
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2320,
        380
      ],
      "id": "0e81ef80-5f01-4590-9778-daa1d5fa6b24",
      "name": "Write_Comments",
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      }
    },
    {
      "parameters": {
        "content": "PDF and Audio",
        "height": 480,
        "width": 2260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        560
      ],
      "id": "a70f82dd-be27-4b39-981f-d6d87ee062eb",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Videos\n",
        "height": 200,
        "width": 300,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1120,
        480
      ],
      "id": "1e969a2f-8bb7-45dd-bcd8-36cb47239644",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        3040,
        -500
      ],
      "id": "37442d4b-d0b2-4ea1-a823-23913cb6a5c8",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "cOFFr7FB6SAc7Hl2",
          "name": "Anthropic account 3"
        }
      }
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        3360,
        -500
      ],
      "id": "fa6fce3b-f2e6-40f4-8338-a293ebfc5d4b",
      "name": "Anthropic Chat Model1",
      "credentials": {
        "anthropicApi": {
          "id": "cOFFr7FB6SAc7Hl2",
          "name": "Anthropic account 3"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        2560,
        420
      ],
      "id": "212a9e76-5205-42d3-832c-fbfe2c1cc167",
      "name": "Anthropic Chat Model2",
      "credentials": {
        "anthropicApi": {
          "id": "cOFFr7FB6SAc7Hl2",
          "name": "Anthropic account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bea5ace9-a62e-4938-835d-48533431edb1",
              "name": "count_sentimentAnalysis",
              "value": "={{ $json.count_sentimentAnalysis }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3140,
        160
      ],
      "id": "caedf46d-01ac-4711-a6ce-48077008bcf1",
      "name": "positive"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f0e3601-7039-4375-af37-82ee7453268e",
              "name": "count_sentimentAnalysis",
              "value": "={{ $json.count_sentimentAnalysis }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3140,
        300
      ],
      "id": "31c5db33-828f-401b-b98e-1bef6593a412",
      "name": "neutral"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "73cd0307-aa7d-4b4f-ade4-e1ab45960efe",
              "name": "count_sentimentAnalysis",
              "value": "={{ $json.count_sentimentAnalysis }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3140,
        440
      ],
      "id": "8cc9bda8-4017-4710-ad0f-7e9d24978ef7",
      "name": "negative"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10a84aa5-e16c-4c20-b216-c90da570e159",
              "name": "count_sentimentAnalysis",
              "value": "={{ $('positive').first().json.count_sentimentAnalysis }}",
              "type": "number"
            },
            {
              "id": "eeaecbdc-cb93-43ce-8867-c872b635d9cc",
              "name": "count_sentimentAnalysis",
              "value": "={{ $('neutral').first().json.count_sentimentAnalysis }}",
              "type": "number"
            },
            {
              "id": "9bbc55d8-9abc-4f3c-9fbf-e14e94dbffe1",
              "name": "count_sentimentAnalysis",
              "value": "={{ $('negative').first().json.count_sentimentAnalysis }}",
              "type": "number"
            },
            {
              "id": "5cf10c59-e72f-44bd-953f-d1e938b0fc08",
              "name": "details.total_comments",
              "value": "={{ $json.details.total_comments }}",
              "type": "number"
            },
            {
              "id": "60581bc7-5d4f-4c97-a1fe-235f6718a754",
              "name": "details.positive_percent",
              "value": "={{ $('sNPS').item.json.details.positive_percent }}",
              "type": "string"
            },
            {
              "id": "bda841c7-8343-47ed-9f5e-ff90505ad3e6",
              "name": "details.negative_percent",
              "value": "={{ $('sNPS').item.json.details.negative_percent }}",
              "type": "string"
            },
            {
              "id": "4a7bcfaa-e06e-4b1b-a296-5910d885dc3d",
              "name": "snps",
              "value": "={{ $('sNPS').item.json.snps }}",
              "type": "number"
            },
            {
              "id": "8aec8c3b-a40c-4edc-aba9-31b803d303cd",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3880,
        80
      ],
      "id": "07558453-935e-4374-91ae-cbe7bcec784d",
      "name": "Sentiment Stats"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "82ebf343-e69a-4d27-8c4e-6af3040f8139",
              "name": "html_title",
              "value": "<h2>{{ $('Youtube Transcript').first().json.videoTitle }}</h2>",
              "type": "string"
            },
            {
              "id": "0c93ecc9-d54e-48be-ad71-c60485cfad7a",
              "name": "html_head",
              "value": "<head>\n<style>\nbody { font-family: Arial, sans-serif; padding: 20px; }\nimg { max-width: 100%; height: auto; }\n.key-points { margin: 20px 0; }\n.metadata { color: #888; }\n.separator {border-bottom: 1px solid #ccc; margin: 20px 0;}\n</style>\n</head>",
              "type": "string"
            },
            {
              "id": "8009ccb4-770e-4d95-b10e-13a807c1333b",
              "name": "html_metadata",
              "value": "<style>\nbody { font-family: Arial, sans-serif; padding: 20px; }\nimg { max-width: 100%; height: auto; }\n.key-points { margin: 20px 0; }\n.metadata { color: #888; }\nhr {\n    border: 0;\n    height: 1px;\n    background-color: #ddd;\n     margin: 20px 0;\n    }\n</style>",
              "type": "string"
            },
            {
              "id": "5e5bd01f-738d-4c03-b082-58edec4ff66b",
              "name": "html_summary",
              "value": "<h3>Summary</h3>\n<p>{{ $('Summary Agent').first().json.text }}</p>\n",
              "type": "string"
            },
            {
              "id": "8e0a7b60-ff72-44c1-9c89-b3481f57b74a",
              "name": "html_transcript",
              "value": "<h3>Transcript</h3> \n<p>{{ $('Youtube Transcript').first().json.transcript }}</p>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3880,
        440
      ],
      "id": "5da55f0d-ec56-401b-9ded-b25ae0002f62",
      "name": "html_document"
    },
    {
      "parameters": {
        "html": "<html>\n  <head>\n    <style>\n      body { font-family: Arial, sans-serif; padding: 20px; }\n      img { max-width: 100%; height: auto; }\n      .key-points { margin: 20px 0; }\n      .metadata { color: #888; }\n      .separator {border-bottom: 1px solid #ccc; margin: 20px 0;}\n    </style>\n  </head>\n  <body>        \n    <hr></hr>\n    <h3>Transcript</h3> \\n<p>{{ $('Youtube Transcript').first().json.transcript }}</p>\n    <hr></hr>\n  </body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        2380,
        900
      ],
      "id": "6237d216-b83d-4033-a019-917b7736d8fb",
      "name": "HTML_Transcript"
    },
    {
      "parameters": {
        "html": "<html>\n  <head>\n    <style>\n      body { font-family: Arial, sans-serif; padding: 20px; }\n      img { max-width: 100%; height: auto; }\n      .key-points { margin: 20px 0; }\n      .metadata { color: #888; }\n      .separator {border-bottom: 1px solid #ccc; margin: 20px 0;}\n    </style>\n  </head>\n  <body>\n    <h2>{{ $('Youtube Transcript').first().json.videoTitle }}</h2>\n    <h3>Summary</h3>\n    <p>{{ $('Summary Agent').first().json.text }}</p>\n    <hr></hr>          \n    <div class=\"metadata\">             \n      <h4>Video Information</h4>\n      <ul>               \n        <li>Channel: {{ $('Read_Videos').first().json.Channelname }}</li>\n        <li>Hyperlink: <a href=\"{{ $('Read_Videos').first().json.Video_Url }}\" target=\"_blank\">{{ $('Read_Videos').first().json.Video_Url }}</a></li>\n        <li>Published: {{ $now }} </li>\n        <li>Duration: {{ $('Read_Videos').first().json.Duration }}</li>\n        <li>View count: {{ $('Read_Videos').first().json.Viewcount }}</li>\n        <li>Likes: {{ $('Read_Videos').first().json.Likes }}</li>              </ul>\n    </div>            \n    <div class=\"metadata\">\n      <h4>Comment Sentiment Analysis</h4>\n      <ul>\n        <li>sNPS: {{ $json.snps }}%</li>\n        <li>Positive: {{ $('Positive').first().json.count_sentimentAnalysis }}</li>\n        <li>Neutral:  {{ $('Neutral').first().json.count_sentimentAnalysis }}</li>\n        <li>Negative: {{ $('Negative').first().json.count_sentimentAnalysis }}</li>\n      </ul>\n    </div>\n    <hr></hr>\n  </body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        2380,
        720
      ],
      "id": "fb3af9bb-04ba-424e-9238-155ca95a26c5",
      "name": "html_summary"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "9c11be25-7728-40b0-b29b-cb7a33d5abde",
      "name": "Schedule Trigger Every Monday, @ 08:00am",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        1980,
        1820
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "##    👆 \n## EDIT FIELD HERE",
        "height": 140,
        "width": 170,
        "color": 4
      },
      "id": "f24801fe-ddfd-45a8-b9ca-c52ad5667bdb",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2160,
        2080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "airtableOAuth2Api",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblidpmK2pnZLkZzs",
          "mode": "list",
          "cachedResultName": "LinkedIn",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblidpmK2pnZLkZzs"
        },
        "options": {}
      },
      "id": "db2a935d-38cf-4c43-86ae-a16209eada53",
      "name": "Past Contributions",
      "type": "n8n-nodes-base.airtable",
      "position": [
        2620,
        1620
      ],
      "typeVersion": 2.1,
      "credentials": {
        "airtableOAuth2Api": {
          "id": "LDzy6MU6xGIUvyoG",
          "name": "Airtable OAuth ✔️️"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf3ef4d0-2688-4fe1-9801-a8519bd293f7",
              "name": "Topic",
              "type": "string",
              "value": "Used Car Market"
            },
            {
              "id": "bbfd7ef1-2696-4824-a5a5-c20873a0f23f",
              "name": "numResultsBack",
              "value": "5",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ec7875a5-86ea-453a-96bc-d74fe635678d",
      "name": "Topic for Google search",
      "type": "n8n-nodes-base.set",
      "position": [
        2220,
        1900
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://serpapi.com/search?q=site%3Alinkedin.com%2Fadvice+{{ $json.Topic }}\n",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "engine",
              "value": "google"
            },
            {
              "name": "q",
              "value": "={{ $json.Topic }}"
            },
            {
              "name": "location",
              "value": "United States"
            },
            {
              "name": "hl",
              "value": "en"
            },
            {
              "name": "gl",
              "value": "us"
            },
            {
              "name": "google_domain",
              "value": "google.com"
            },
            {
              "name": "num",
              "value": "={{ $json.numResultsBack }}"
            },
            {
              "name": "start",
              "value": "10"
            },
            {
              "name": "safe",
              "value": "active"
            },
            {
              "name": "api_key",
              "value": "979f843b8d4d78365ccdb42501e70c6d12c848bce8e63bdbf0c04d8452e491c1"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {}
          }
        }
      },
      "id": "8b50747a-eb80-4837-87d4-4502cdb275e4",
      "name": "LIN Advice articles (Google search)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2420,
        1900
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node script\n// Initialize an array to store all matches\n let allMatches = [];\n\nconst regexPattern = /https:\\/\\/www\\.linkedin\\.com\\/advice\\/[^%&\\s\"']+/g;\n\n\n $input.all().forEach(item => {\n   const organicResults = item.json.organic_results || [];\n   organicResults.forEach(result => {\n     if (result.link) {\n       const matches = result.link.match(regexPattern);\n       if (matches) allMatches.push(...matches);\n     }\n   });\n });\n\n return [{\"json\": {\"matches\": allMatches }}];"
      },
      "id": "a3b68aa5-2f87-4418-8880-494e704e9726",
      "name": "Extract Article links (LIN Advice articles)",
      "type": "n8n-nodes-base.code",
      "position": [
        2620,
        1900
      ],
      "typeVersion": 2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "matches",
        "options": {}
      },
      "id": "93d15bdb-e01a-4901-a9ab-66093477e205",
      "name": "Split Out All Links (LinkedIn Advice articles)",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2820,
        1900
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "URL",
              "field2": "matches"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "id": "8e9c1a4c-47b2-437c-b8c9-31ab74cb864c",
      "name": "Merge Data (Keep New)",
      "type": "n8n-nodes-base.merge",
      "position": [
        3080,
        1740
      ],
      "typeVersion": 2.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "={{ $json.matches }}",
        "options": {}
      },
      "id": "c30dc42d-576d-426d-ba7c-cf1b6d20a7ac",
      "name": "HTTP Request (LIN Advice)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3320,
        1740
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "ArticleTitle",
              "cssSelector": ".pulse-title"
            },
            {
              "key": "ArticleTopics",
              "cssSelector": ".article-main__content"
            },
            {
              "key": "ArticleContributions",
              "cssSelector": ".contribution__text"
            }
          ]
        },
        "options": {}
      },
      "id": "ff4c75d8-e006-4ba2-9838-a2c9fb210cdc",
      "name": "HTML Extract LIN Article & other users contributions",
      "type": "n8n-nodes-base.html",
      "position": [
        3540,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Read the following collaborative article and provide your own helpful collaboration. The article has various topics that each need to be answered. Write me a paragraph of helpful advice for each topic and format your response as outlined in the template below.\n\n-------------\nARTICLE TITLE\n{{ $json.ArticleTitle }}\n\nTOPICS WITHIN THE LINKEDIN ARTICLE:\n{{ $json.ArticleTopics }}\n\nOTHER CONTRIBUTIONS TO THE LINKEDIN ARTICLE:\n{{ $json.ArticleContributions }}\n-------------\n\nYour advice must be unique and something that no one else has recommended before on the article, or in any of the topics. The response needs to be raw and genuine to elicit conversation and engagement.\n\nFormat your output in text and follow the template below. Only populate the template with as many topics as were provided in the original request \n\ni.e: if there were only 4 topics in the original request then only provide 4 pieces of advice:\n\nOUTPUT TEMPLATE\n\n1. [Topic #1 from Article]\n[Advice for Topic]\n\n2. [Topic #2 from Article]\n[Advice for Topic]\n\n3. [Topic #3 from Article]\n[Advice for Topic]\n\n4. [Topic #4 from Article]\n[Advice for Topic]\n\n5. [Topic #5 from Article]\n[Advice for Topic]\n\n6. [Topic #6 from Article]\n[Advice for Topic]"
            }
          ]
        },
        "options": {
          "temperature": 0.7
        }
      },
      "id": "58bfce54-05d8-49e6-9786-4b595b0ba588",
      "name": "LIN Contribution Writer",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        3760,
        1740
      ],
      "typeVersion": 1.4,
      "credentials": {
        "openAiApi": {
          "id": "dbsbEP9NpcetZP6N",
          "name": "Research Assistant"
        }
      }
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "=C085C7Q7FPY",
          "mode": "id"
        },
        "text": "=*{{ $('HTML Extract LIN Article & other users contributions').item.json.ArticleTitle }}*\n{{ $('Merge Data (Keep New)').item.json.matches }}\n\n{{ $json.message.content }}\n------------------------------------------------------",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "mrkdwn": true,
          "unfurl_links": true
        }
      },
      "id": "622bcde9-7272-4136-ba1e-067dd57ac63e",
      "name": "Post LIN Article contributions [Slack]",
      "type": "n8n-nodes-base.slack",
      "position": [
        4120,
        1740
      ],
      "typeVersion": 2.2,
      "webhookId": "eeae66d1-7438-45d6-963f-e3825125c789",
      "credentials": {
        "slackApi": {
          "id": "ExbHusd0mvUM1VMY",
          "name": "SYCn8n"
        }
      }
    },
    {
      "parameters": {
        "authentication": "airtableOAuth2Api",
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tblidpmK2pnZLkZzs",
          "mode": "list",
          "cachedResultName": "LinkedIn",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tblidpmK2pnZLkZzs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Post Title": "={{ $json.message.blocks[0].elements[0].elements[2].text }}",
            "URL": "={{ $json.message.blocks[0].elements[0].elements[3].url }}",
            "Contribution": "={{ $json.message.blocks[0].elements[0].elements[6].text }}",
            "Topic": "={{ $('Topic for Google search').item.json.Topic }}",
            "Person": "Sergio"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Post Title",
              "displayName": "Post Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Contribution",
              "displayName": "Contribution",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Topic",
              "displayName": "Topic",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Lead_Generation",
              "displayName": "Lead_Generation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Person",
              "displayName": "Person",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Todo",
                  "value": "Todo"
                },
                {
                  "name": "In progress",
                  "value": "In progress"
                },
                {
                  "name": "Done",
                  "value": "Done"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "aa50cee7-c4d1-4a60-b1f0-b13342978172",
      "name": "Post LIN Contribution [Airtable]",
      "type": "n8n-nodes-base.airtable",
      "position": [
        4420,
        1740
      ],
      "typeVersion": 2.1,
      "credentials": {
        "airtableOAuth2Api": {
          "id": "LDzy6MU6xGIUvyoG",
          "name": "Airtable OAuth ✔️️"
        }
      }
    },
    {
      "parameters": {
        "content": "### 1. Get advice articles from a Google search via SerpAPI for LinkedIn advice articles based on a predefined query.\n### 2. Extract Article link urls for LIN advice articles (regex). \n### 3. Split Out all links for LIN advice articles into individual items allowing each to be processed one at a time.\n",
        "height": 147,
        "width": 622
      },
      "id": "7bdb1564-37c5-4988-a2bd-9fd044df7b0c",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2360,
        2080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Merge data and keep unique google search results, ensuring that only unique LinkedIn article URLs are processed preventing duplicate article links from being handled.\n",
        "height": 207,
        "width": 213
      },
      "id": "98325a9a-b87c-4bfe-8151-2834ebb5b830",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3040,
        1920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\n### 1. HTTP Request to get LinkedIn advice articles - retrieves HTML content of each LinkedIn article link. \n\n### 2. HTML extract LinkedIn article & other users contributions. Node extracts relevant information from the HTML articles, including title, topics discussed, and contributions made by other users.\n",
        "height": 211,
        "width": 427
      },
      "id": "e408a073-567d-47c5-8b0f-93ba665ce786",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3280,
        1920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Post new LinkedIn contributions to a specified Slack channel. Posting to be shared with a team.\n",
        "height": 112,
        "width": 242
      },
      "id": "cf847dfb-2fa2-436f-97c1-95a207f7f08a",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4060,
        1920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Post new LinkedIn contributions to Airtable, saving article title, link, & the contribution itself for future reference & tracking.",
        "height": 110,
        "width": 281
      },
      "id": "6d783055-e417-4d56-9cc5-a2d1cb81d458",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4320,
        1920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Get LinkedIn contributions from Airtable (GetRows) - Node retrieves all LinkedIn contributions stored in a specified Airtable table\n\n",
        "height": 283,
        "width": 299
      },
      "id": "aa403e96-c427-4f63-a923-1603117afeea",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2520,
        1500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "PDF and Audio",
        "height": 820,
        "width": 2880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        1460
      ],
      "id": "b7f7467d-8d9e-4f1e-ad72-f253cfdb1077",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1880,
        -280
      ],
      "id": "73f3fe8b-e68f-4951-9f89-8c9166877772",
      "name": "Schedule Trigger4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e22ea465-92e5-4eb3-bd45-3ba45dd8bab8",
              "leftValue": "={{ $json.Process }}",
              "rightValue": "TRUE",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2380,
        -40
      ],
      "id": "58001b7c-2ff9-4be1-91b0-f96d26e58a43",
      "name": "to Process1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appXgzD7mFshr94K3",
          "mode": "list",
          "cachedResultName": "Blue&_ Content Generation Platform - Content Input.csv",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3"
        },
        "table": {
          "__rl": true,
          "value": "tbltMGiskcvr9yejM",
          "mode": "list",
          "cachedResultName": "Comments",
          "cachedResultUrl": "https://airtable.com/appXgzD7mFshr94K3/tbltMGiskcvr9yejM"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2160,
        -40
      ],
      "id": "8bf52689-f998-4e86-94c0-d2d3967cb100",
      "name": "Read_Comments",
      "executeOnce": false,
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "0k6jxJu0tQwdczzt",
          "name": "n8nToken_20250128"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e22ea465-92e5-4eb3-bd45-3ba45dd8bab8",
              "leftValue": "={{ $json.Process_video }}",
              "rightValue": "TRUE",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2500,
        -540
      ],
      "id": "2e43d363-fa11-447b-8c63-372796d87113",
      "name": "Process_video",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "inputText": "={{ $('Youtube Transcript').item.json.transcript || '[null]' }}",
        "categories": {
          "categories": [
            {
              "category": "Empty",
              "description": "there is no transcript"
            },
            {
              "category": "Ad",
              "description": "transcript is an advertisement"
            },
            {
              "category": "Content",
              "description": "When transcript is not an ad. It is real content."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "={{ $('Prompts').item.json.Advertising }}",
          "enableAutoFixing": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        3240,
        -640
      ],
      "id": "b11db0d8-e6fd-436e-b6c1-84978e586ce1",
      "name": "Classifier",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "adad4ab3-6a87-493b-8a65-98afd8ff7ca7",
              "leftValue": "={{ $json.commentsCount }}",
              "rightValue": "={{0}}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2960,
        -60
      ],
      "id": "06ed91f3-1c60-4503-9559-a2a3487fe097",
      "name": "If zero comments"
    },
    {
      "parameters": {
        "html": "<html>\n  <head>\n    <style>\n      body { font-family: Arial, sans-serif; padding: 20px; }\n      img { max-width: 100%; height: auto; }\n      .key-points { margin: 20px 0; }\n      .metadata { color: #888; }\n      .separator {border-bottom: 1px solid #ccc; margin: 20px 0;}\n    </style>\n  </head>\n  <body>\n    <h2>{{ $('Youtube Transcript').first().json.videoTitle }}</h2>\n    <h3>Summary</h3>\n    <p>{{ $('Summary Agent').first().json.text }}</p>\n    <hr></hr>          \n    <div class=\"metadata\">             \n      <h4>Video Information</h4>\n      <ul>               \n        <li>Published: {{ $now.format('yyyy-MMM-dd') }} </li>\n        <li>Duration: under {{ $('Read_Videos').first().json.Duration.toDateTime().minute+1}} minutes</li>\n        <li>Views: {{ $('Read_Videos').first().json.Viewcount }}</li>\n        <li>Likes: {{ $('Read_Videos').first().json.Likes }}</li> </ul>\n    </div>            \n    <div class=\"metadata\">\n      <h4>Comment Sentiment Analysis</h4>\n      <ul>\n        <li>Sentiment NPS: {{ $('Sentiment Stats').item.json.snps }}\" %\"</li>\n      </ul>\n    </div>\n    <hr></hr>\n  </body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        2580,
        720
      ],
      "id": "6676a6ef-f4da-4b7b-b438-bb55ff84dead",
      "name": "html_summary_audio"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-05T23:29:35.000Z",
  "versionId": "d6e5a2e8-76e5-4962-a2ca-6c10bf82b9dd"
}