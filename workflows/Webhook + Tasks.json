{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Appointments": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Availability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Get List IDs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Tasks": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get List IDs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get List IDs for Single Task",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get List IDs for All Tasks",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get List IDs for Update Tasks",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Lists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create New List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get List IDs": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create Google Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get List IDs1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Tasks1": {
      "main": [
        [
          {
            "node": "If Task Matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If List Matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Tasks1": {
      "main": [
        [
          {
            "node": "If task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "IF List ID Matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "IF equal to List Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF equal to List Name": {
      "main": [
        [
          {
            "node": "Get All Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get List IDs for All Tasks": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get List IDs for Update Tasks": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get List IDs for Single Task": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "IF equal to List Name1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF equal to List Name1": {
      "main": [
        [
          {
            "node": "Get All Tasks2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Tasks2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If equal task name": {
      "main": [
        [
          {
            "node": "Get a Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If equal task name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF List ID Matches": {
      "main": [
        [
          {
            "node": "Get All Tasks1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If List Matches": {
      "main": [
        [
          {
            "node": "Google Tasks1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Task Matches": {
      "main": [
        [
          {
            "node": "Delete Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If task": {
      "main": [
        [
          {
            "node": "Update Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-21T01:14:46.804Z",
  "id": "VYLjBsTqaszbYk4i",
  "isArchived": false,
  "meta": null,
  "name": "Webhook + Tasks",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -608,
        2336
      ],
      "id": "d1dd156a-76ac-421c-87b0-9fe399f9a2ea",
      "name": "When chat message received",
      "webhookId": "14cbe5b9-2e8c-44e7-8921-7755e77b399c"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "test",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -880,
        -80
      ],
      "id": "a2362061-1e6e-4158-a0bf-27418f20ecfd",
      "name": "Webhook",
      "webhookId": "97dbae67-2675-48b4-bc25-de17ba6860b1"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"{{ JSON.stringify($json.output).replace(/(^\\\"|\\\"$)/g, '') }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -176,
        -80
      ],
      "id": "5d33fb64-5020-44f6-a864-4c602ad022ed",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        -736,
        192
      ],
      "id": "6eb0f6bc-6d03-4a13-8128-d98ba9425de8",
      "name": "SerpAPI"
    },
    {
      "parameters": {
        "name": "aiworkshop_FAQ"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -112,
        112
      ],
      "id": "b0634c45-723a-4c24-b8fc-feb9d310e8c1",
      "name": "Vector Store Tool"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "n8n",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        -160,
        272
      ],
      "id": "6cb0ebb5-62b2-45fb-946c-db7af726aa66",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        144,
        272
      ],
      "id": "ed538171-cc57-4b0f-9709-2bd1390f38c6",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.1,
      "position": [
        32,
        432
      ],
      "id": "8c6d0bf9-d13c-4bb1-b54a-df7b83b13271",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1_Q8ifcFSVE8ClUF1lIRJL7WLxEHe0bF8SBevxjXNdjw",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_Q8ifcFSVE8ClUF1lIRJL7WLxEHe0bF8SBevxjXNdjw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_Q8ifcFSVE8ClUF1lIRJL7WLxEHe0bF8SBevxjXNdjw/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{ $fromAI('name') }}",
            "Email ": "={{ $fromAI('email') }}",
            "Phone Number": "={{ $fromAI('phone') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email ",
              "displayName": "Email ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Phone Number",
              "displayName": "Phone Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        -336,
        192
      ],
      "id": "651e19e4-b9a6-4389-9a7b-684435a73e33",
      "name": "Google Sheets"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "zubair.trabzada@gmail.com",
          "mode": "list",
          "cachedResultName": "zubair.trabzada@gmail.com"
        },
        "start": "={{ $fromAI(\"startTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('attendee') }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "id": "db43e23b-ebb4-43f9-ab4f-1b34a4732746",
      "name": "Appointments",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        -592,
        192
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "zubair.trabzada@gmail.com",
          "mode": "list",
          "cachedResultName": "zubair.trabzada@gmail.com"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $fromAI(\"ondDayBefore\",\"one day before the date the user requested\") }}",
          "timeMax": "={{ $fromAI(\"ondDayAfter\",\"one day after the date the user requested\") }}"
        }
      },
      "id": "6da12feb-5612-4588-86cc-c2516b584de7",
      "name": "Availability",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        -448,
        192
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        -848,
        192
      ],
      "id": "846a6477-4492-4568-b5c4-9b0722d6387b",
      "name": "Anthropic Chat Model"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=User request: {{ $json.query.request }}\n\nUser information:\n- Name: {{ $json.body.name || 'Not provided' }}\n- Email: {{ $json.body.email || 'Not provided' }}\n- Phone: {{ $json.body.phone || 'Not provided' }}\n- Date: {{ $json.body.date || 'Not provided' }}\n- Time: {{ $json.body.time || 'Not provided' }}\n",
        "options": {
          "systemMessage": "=You are a customer support AI Agent designed to handle various tasks efficiently. Your primary role is to check for available times for appointments, book appointments, grab contact information, and help retrieve information that is requested for the user. You have access to multiple tools to help you fulfill requests:\n\nAvailability: Use this tool for checking available times for appointment.\nAppointments: Use this tool to create the appointment.\n\nVector Store Tool: Use this tool to retrieve information about anything related to the Skool Community\n\nGoogle Sheets: Use this tool to store customer's contact information\n\nSerpAPI: Use this tool for general information to fetch results from Google Search.\n\nWhen a task requires using one or more of these tools, make sure to identify which tool is most appropriate, pass along the relevant details, and execute the actions needed to complete the task. Your goal is to be proactive, precise, and organized in managing these resources to provide a smooth experience for the user.\n\nKeep responses concise, short, and relevant to the user’s question.\n\nHere is the current time/date: {{ $now.format('DD')}}\n\nDO NOT PROVIDE ANY EXISTING MEETING DETAILS\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -528,
        0
      ],
      "id": "a410a643-8e69-4d32-aba4-3e7c1313588f",
      "name": "AI Agent1"
    },
    {
      "parameters": {},
      "id": "4fd1a634-586b-4313-a9c9-f54cddc180fe",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -608,
        2112
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=The input data will come in as: {{ $json.chatInput }}\n\n\nParse the user request, always output your answers in the following format:\n\n- Operation (Use either \"New Task\", \"Delete Task\", \"Update Task\", \"Get Task\", \"Get Many\", \"Create New List\" or \"Get Lists\")\n- Text (Pass the full text from the input data)\n- Task Name (Using the {{ $json.chatInput }} come up with a task name, do not include the operation in the task name. Also if the input query states to \"Add\" you can remove that from the task name.)\n- Notes (Create a note based on the input data if it make sense)\n- Due Date (Parse the input data for due date, if not specified set the due date to 7 days from {{ $now }}.\n- List Name (Parse the input data to determine the proper list name, remove list from the list name unless the list name is specified in quotes)\n\nWhen operation is (Update Task) add the following field:\n- Task Name (parse the input data to specify the original task name)\n- New Name (what the task should be updated to)\n\nWhen operation is (Delete Task) filter out any words like remove or delete when passing the task name along.\n\nWhen operation is (Get Many) return all tasks including the ones past due. "
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "07fdad84-8446-4232-8b9a-59ebe562ba94",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -400,
        2112
      ],
      "credentials": {
        "openAiApi": {
          "id": "WYRQt22D3Ej2FW2r",
          "name": "OpenAi Blue&"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9795a9ee-e316-41b5-a259-0d7e341892f3",
              "name": "task_name",
              "value": "={{ $json.message.content[\"Task Name\"] }}",
              "type": "string"
            },
            {
              "id": "afc12ee2-66d4-4e34-8cae-efe2300a0b4d",
              "name": "list_name",
              "value": "={{ $json.message.content[\"List Name\"].replace(/\\blist\\b/i, \"\").trim() }}",
              "type": "string"
            },
            {
              "id": "9ad938cf-18ef-460b-8d08-3be22c81ef9e",
              "name": "operation",
              "value": "={{ $json.message.content.Operation }}",
              "type": "string"
            },
            {
              "id": "70a5e0ee-9c22-4890-893b-a8e813efa0bb",
              "name": "notes",
              "value": "={{ $json.message.content.Notes }}",
              "type": "string"
            },
            {
              "id": "6af77db5-3fb7-4034-9ca9-c8024feeac42",
              "name": "prompt",
              "value": "={{ $json.message.content.Text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c7a66a15-62d5-4aa4-858b-f2d84940f732",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1088,
        1696
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "task": "={{ $json.id }}",
        "returnAll": true,
        "additionalFields": {}
      },
      "id": "025cd0bc-7f1d-41a0-807e-cf80e3c11ec4",
      "name": "Get All Tasks",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        1952,
        2192
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "task": "={{ $('IF List ID Matches').item.json.id }}",
        "taskId": "={{ $json.id }}",
        "updateFields": {
          "title": "={{ $('Switch').item.json.message.content[\"New Name\"] }}"
        }
      },
      "id": "bf8f4a1c-8558-47ec-925b-02d214afdcda",
      "name": "Update Task",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        2560,
        2496
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "New Task",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "966d6731-85f7-4aac-9c02-abb6a5699d13",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Delete Task",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "29e71a7e-e2b9-4d8e-80f0-f55cacba3950",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Get Task",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dca2c52a-c658-45aa-b59e-92b887cb7afd",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Get Many",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "420ad6e3-ea20-4769-b974-01fc618864af",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Update Task",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "695610de-273b-4e4c-b115-2e245c394d70",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Get Lists",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a88793a1-1de8-4675-8560-ad2cad170e56",
                    "leftValue": "={{ $json.message.content.Operation }}",
                    "rightValue": "Create New List",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "89f4d1ea-8255-4dbd-8363-8d3228571eda",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        320,
        2032
      ],
      "notesInFlow": true,
      "notes": "0 New 1 Del 2 Get 3 Many"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        2784
      ],
      "id": "8f46f0fe-e06c-400a-9212-4ec19c2144f7",
      "name": "Get Lists"
    },
    {
      "parameters": {
        "operation": "delete",
        "task": "={{ $('If List Matches').item.json.id }}",
        "taskId": "={{ $json.id }}"
      },
      "id": "18c747b9-b820-4f6d-b88e-961a9a408e56",
      "name": "Delete Task",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        2528,
        1664
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.message.content['List Name'] }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        3104
      ],
      "id": "437a04d9-1c3d-4f6f-8919-69a4d05a681b",
      "name": "Create New List"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        1392
      ],
      "id": "0efe481d-a4b3-467a-8b2e-4f4156bfe268",
      "name": "Get List IDs"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "ceff23c5-57b7-4320-a18a-c20ecd3679ea",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"List Name\"].toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        1392
      ],
      "id": "c6116b6d-4d5a-4056-a71a-913756437fff",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "return items[0].json.items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1328,
        1392
      ],
      "id": "cf97580d-e9f3-42ff-9c26-98870348eb34",
      "name": "Code1"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1376,
        1696
      ],
      "id": "8a1bd909-d0d1-43f3-a027-ed4a6f362c3b",
      "name": "Get List IDs1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "task": "={{ $json.id }}",
        "returnAll": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        2096,
        1680
      ],
      "id": "8b95edb8-d5b4-4f55-bf42-4d4f6e3f931c",
      "name": "Google Tasks1"
    },
    {
      "parameters": {
        "jsCode": "return items[0].json.items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1616,
        1696
      ],
      "id": "8fb6027c-31f4-4c7c-a175-331057c757c7",
      "name": "Code2"
    },
    {
      "parameters": {
        "task": "={{ $json.id }}",
        "title": "={{ $('Switch').item.json.message.content[\"Task Name\"] }}",
        "additionalFields": {
          "dueDate": "={{ $('Switch').item.json.message.content[\"Due Date\"] }}",
          "notes": "={{ $('Switch').item.json.message.content.Notes }}"
        }
      },
      "id": "e1451b15-15f0-4504-9c7e-2fdcab2fd526",
      "name": "Create Google Task",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        1888,
        1376
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "task": "={{ $('IF equal to List Name1').item.json.id }}",
        "taskId": "={{ $json.id }}"
      },
      "id": "2efca279-c486-465f-ab95-3c7cda8b8026",
      "name": "Get a Task",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        2560,
        1904
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "task": "={{ $json.id }}",
        "returnAll": true,
        "additionalFields": {}
      },
      "id": "1fcf7a1e-ae7e-44b4-ba2a-a7017948b236",
      "name": "Get All Tasks1",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        2032,
        2512
      ]
    },
    {
      "parameters": {
        "jsCode": "return items[0].json.items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1552,
        2544
      ],
      "id": "a3dd20d0-8d1f-406e-ba7a-c984d5cfe354",
      "name": "Code4"
    },
    {
      "parameters": {
        "jsCode": "return items[0].json.items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1456,
        2224
      ],
      "id": "a9f295ca-4694-4756-9a4c-ae364c5dd13b",
      "name": "Code5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2e65e4cf-09e7-4135-9d2c-d5334573309a",
              "leftValue": "={{ $json.title.toLowerCase()}}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"List Name\"].toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1696,
        2224
      ],
      "id": "d088c1fe-0142-4411-9cc8-20d38ef0d8c6",
      "name": "IF equal to List Name"
    },
    {
      "parameters": {
        "content": "## Update [task name] on  [List Name]",
        "height": 240,
        "width": 1760
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1136,
        2464
      ],
      "typeVersion": 1,
      "id": "7e9067db-6c89-498e-bec5-ae41dd6ed506",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Get all tasks from [List Name]",
        "height": 220,
        "width": 1720
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1040,
        2160
      ],
      "typeVersion": 1,
      "id": "e2148500-40f0-413a-9748-26c494e19044",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        2224
      ],
      "id": "ff1baf99-0c1c-4776-9c90-e4eba9b7412f",
      "name": "Get List IDs for All Tasks"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1328,
        2544
      ],
      "id": "ac4b8659-4d35-45be-b246-6568ec789033",
      "name": "Get List IDs for Update Tasks"
    },
    {
      "parameters": {
        "url": "https://tasks.googleapis.com/tasks/v1/users/@me/lists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleTasksOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1152,
        1936
      ],
      "id": "089b9a1d-b8e6-4ea6-82c7-0fd48d26d91a",
      "name": "Get List IDs for Single Task"
    },
    {
      "parameters": {
        "jsCode": "return items[0].json.items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1376,
        1936
      ],
      "id": "02617513-6546-46df-bf8a-f7a843011472",
      "name": "Code6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2e65e4cf-09e7-4135-9d2c-d5334573309a",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"List Name\"].toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        1936
      ],
      "id": "39a0de93-5c50-4945-a414-da0740f31c81",
      "name": "IF equal to List Name1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "task": "={{ $json.id }}",
        "returnAll": true,
        "additionalFields": {}
      },
      "id": "ede3e2f4-b28f-4290-b277-7f0399fb22f2",
      "name": "Get All Tasks2",
      "type": "n8n-nodes-base.googleTasks",
      "typeVersion": 1,
      "position": [
        1856,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "991f7ad1-75d9-4b33-a12d-418855c09f85",
              "leftValue": "={{ $('Switch').item.json.message.content[\"Task Name\"].toLowerCase() }}",
              "rightValue": "={{ $json.title.toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": "={{ false }}",
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2288,
        1920
      ],
      "id": "b9bfb8d1-4fa2-4933-8d9a-fe31d1f8f963",
      "name": "If equal task name"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6888acc6-d0e8-4844-9d03-7725fd9c0fa9",
              "name": "title",
              "value": "={{ $json.title.toLowerCase() }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2080,
        1920
      ],
      "id": "1142d0c7-b54e-4086-9496-6877998ee396",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2e65e4cf-09e7-4135-9d2c-d5334573309a",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"List Name\"].toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1776,
        2544
      ],
      "id": "cca6b557-7377-47e3-b179-9922a0759dd1",
      "name": "IF List ID Matches"
    },
    {
      "parameters": {
        "content": "## Get [single task name] from [list name]",
        "height": 240,
        "width": 1840
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        912,
        1872
      ],
      "typeVersion": 1,
      "id": "340473ae-0a39-4878-8247-66818df9249f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Return all my lists",
        "height": 260,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1056,
        2720
      ],
      "typeVersion": 1,
      "id": "263935c3-5cf1-4e32-a36e-bb0a7b5d05d2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Create new list named [List Name]",
        "height": 260,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1072,
        3024
      ],
      "typeVersion": 1,
      "id": "ff47f511-fffa-415f-9aa5-84c9649050d2",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2cb3250e-3bcb-496a-acb7-62e97e91a8c5",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"List Name\"].toLowerCase().replace(/\\blist\\b/i, \"\").trim()  }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1856,
        1696
      ],
      "id": "a310f57e-c3d7-4a6e-bd14-0b7722c60bdb",
      "name": "If List Matches"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "872c3f6a-1a5b-49cb-a34c-eafba17d1a5a",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Switch').item.json.message.content[\"Task Name\"].toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2288,
        1680
      ],
      "id": "fd907c66-f610-4954-a3ab-9a0cca63fb7c",
      "name": "If Task Matches"
    },
    {
      "parameters": {
        "content": "## Delete [task name] from [list name]",
        "height": 240,
        "width": 1780
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        976,
        1600
      ],
      "typeVersion": 1,
      "id": "9c600357-f6d0-4a26-9223-32cfc61b4f75",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Create [task name] on [list name]",
        "height": 220,
        "width": 1260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        896,
        1344
      ],
      "typeVersion": 1,
      "id": "77c45c60-f597-440c-8ca1-6051548e2dc2",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "991f7ad1-75d9-4b33-a12d-418855c09f85",
              "leftValue": "={{ $('Switch').item.json.message.content[\"Original Task Name\"].toLowerCase() }}",
              "rightValue": "={{ $json.title.toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2256,
        2512
      ],
      "id": "f7dd9868-5d1d-4ee9-9eba-de558c6ad9ec",
      "name": "If task"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "076d67fc-7233-4321-8471-718907fa3669",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "76744c09-d2d4-4dd1-8ede-a2dd1c54c8f9",
              "name": "notes",
              "value": "={{ $json.notes }}",
              "type": "string"
            },
            {
              "id": "946b97c5-450a-4963-9bc9-8794fd453035",
              "name": "due",
              "value": "={{ $json.due }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2176,
        2192
      ],
      "id": "20a669c8-8773-4363-9f52-c31090e4004b",
      "name": "Set Fields"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n// Send the results back to the agent\nreturn {\n  results: items\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2416,
        2192
      ],
      "id": "8fc5d498-6067-49e3-b999-9580597110ae",
      "name": "Code3"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-21T01:14:46.807Z",
      "updatedAt": "2025-08-21T01:14:46.807Z",
      "role": "workflow:owner",
      "workflowId": "VYLjBsTqaszbYk4i",
      "projectId": "yxFGV0GmdwTIiKaD"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-21T01:15:33.000Z",
  "versionId": "949cd06e-125f-449b-975a-3e08f77a668b"
}